{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\Reactjs\\\\Basic\\\\base-react-redux\\\\src\\\\component\\\\Admin\\\\Content\\\\ModalViewUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\nimport { toast } from \"react-toastify\";\nimport { Toast } from 'bootstrap';\nimport _ from 'lodash';\nimport { putUpdateUser } from '../../../Services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalViewUser = props => {\n  _s();\n\n  const {\n    show,\n    setShow,\n    dataView,\n    resetData\n  } = props;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUsername] = useState('');\n  const [image, setImage] = useState('');\n  const [role, setRole] = useState('USER');\n  const [previewImg, setPreviewImg] = useState('');\n\n  const handleClose = () => {\n    setShow(false);\n    setEmail(\"\");\n    setPassword(\"\");\n    setUsername(\"\");\n    setImage(\"\");\n    setRole(\"USER\");\n    setPreviewImg(\"\");\n    props.resetData();\n  };\n\n  useEffect(() => {\n    if (!_.isEmpty(dataView)) {\n      setEmail(dataView.email);\n      setUsername(dataView.username);\n      setRole(dataView.role);\n\n      if (dataView.image) {\n        setPreviewImg(`data:image/jpeg;base64,${dataView.image}`);\n      }\n    }\n  }, [props.dataView]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      size: \"xl\",\n      backdrop: \"static\",\n      className: \"modal-add-user\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"View a user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"row g-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              value: email,\n              disabled: true,\n              onChange: Event => setEmail(Event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              value: password,\n              disabled: true,\n              onChange: Event => setPassword(Event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: userName,\n              disabled: true,\n              onChange: Event => setUsername(Event.target.value),\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Apartment, studio, or floor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              value: role,\n              onChange: Event => setRole(Event.target.value),\n              disabled: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                value: \"USER\",\n                children: \"USER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ADMIN\",\n                children: \"ADMIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label label-upload\",\n              htmlFor: \"labelUpload\",\n              children: [/*#__PURE__*/_jsxDEV(HiOutlineViewGridAdd, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), \"Upload Image \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              id: \"labelUpload\",\n              disabled: true,\n              onChange: Event => hanleUploadImage(Event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 img-preview\",\n            children: previewImg ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: previewImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Preview Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModalViewUser, \"t1P2+C/EmX5CbXcJMeepGuyCXtA=\");\n\n_c = ModalViewUser;\nexport default ModalViewUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalViewUser\");","map":{"version":3,"names":["React","useEffect","useState","Button","Modal","HiOutlineViewGridAdd","toast","Toast","_","putUpdateUser","ModalViewUser","props","show","setShow","dataView","resetData","email","setEmail","password","setPassword","userName","setUsername","image","setImage","role","setRole","previewImg","setPreviewImg","handleClose","isEmpty","username","Event","target","value","hanleUploadImage"],"sources":["D:/Fullstack/Reactjs/Basic/base-react-redux/src/component/Admin/Content/ModalViewUser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\r\nimport { toast } from \"react-toastify\";\r\nimport { Toast } from 'bootstrap';\r\nimport _ from 'lodash'\r\nimport { putUpdateUser } from '../../../Services/apiService'\r\nconst ModalViewUser = (props) => {\r\n    const { show, setShow, dataView, resetData } = props\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUsername] = useState('');\r\n    const [image, setImage] = useState('')\r\n    const [role, setRole] = useState('USER');\r\n    const [previewImg, setPreviewImg] = useState('')\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEmail(\"\"); setPassword(\"\"); setUsername(\"\"); setImage(\"\"); setRole(\"USER\"); setPreviewImg(\"\");\r\n        props.resetData();\r\n    }\r\n    useEffect(() => {\r\n        if (!_.isEmpty(dataView)) {\r\n            setEmail(dataView.email);\r\n            setUsername(dataView.username);\r\n            setRole(dataView.role);\r\n            if (dataView.image) {\r\n                setPreviewImg(`data:image/jpeg;base64,${dataView.image}`)\r\n            }\r\n        }\r\n    }, [props.dataView])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} size='xl' backdrop=\"static\"\r\n                className='modal-add-user'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>View a user</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Email</label>\r\n                            <input type=\"email\" className=\"form-control\" value={email} disabled\r\n                                onChange={(Event) => setEmail(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={password} disabled\r\n                                onChange={(Event) => setPassword(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Username</label>\r\n                            <input value={userName} disabled\r\n                                onChange={(Event) => setUsername(Event.target.value)}\r\n                                type=\"text\" className=\"form-control\" placeholder=\"Apartment, studio, or floor\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\"form-label\">Role</label>\r\n                            <select className=\"form-select\" value={role} onChange={(Event) => setRole(Event.target.value)} disabled>\r\n                                <option selected value=\"USER\">USER</option>\r\n                                <option value=\"ADMIN\">ADMIN</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <label className=\"form-label label-upload\" htmlFor='labelUpload'>\r\n                                <HiOutlineViewGridAdd />Upload Image </label>\r\n                            <input type='file' hidden id='labelUpload' disabled\r\n                                onChange={(Event) => hanleUploadImage(Event)}></input>\r\n                        </div>\r\n                        <div className='col-md-12 img-preview'>\r\n                            {previewImg ? <img src={previewImg} />\r\n                                : <span>Preview Image</span>}\r\n\r\n\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalViewUser"],"mappings":"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"},"metadata":{},"sourceType":"module"}