{"ast":null,"code":"class CountryList {\n  constructor() {\n    this.data = require('./data.json');\n    this.labelMap = {};\n    this.valueMap = {};\n    this.data.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value;\n      this.valueMap[country.value.toLowerCase()] = country.label;\n    });\n  }\n\n  getValue(label) {\n    return this.labelMap[label.toLowerCase()];\n  }\n\n  getLabel(value) {\n    return this.valueMap[value.toLowerCase()];\n  }\n\n  getLabels() {\n    return this.data.map(country => country.label);\n  }\n\n  getValues() {\n    return this.data.map(country => country.value);\n  }\n\n  getLabelList() {\n    return this.labelMap;\n  }\n\n  getValueList() {\n    return this.valueMap;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  setLabel(value, label) {\n    this.data.forEach(country => {\n      if (country.value === value) {\n        country.label = label;\n        this.valueMap[country.value.toLowerCase()] = country.label;\n      }\n    });\n    return this;\n  }\n\n  setEmpty(label) {\n    this.data.unshift({\n      value: '',\n      label: label\n    });\n    this.valueMap[''] = label;\n    this.labelMap[label] = '';\n    return this;\n  }\n\n  native() {\n    this.nativeData = require('./data-native.json');\n    this.nativeData.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value;\n      this.valueMap[country.value.toLowerCase()] = country.label;\n    });\n    return this;\n  }\n\n}\n\nconst countryList = () => {\n  if (!(this instanceof CountryList)) return new CountryList();\n};\n\nmodule.exports = countryList;","map":{"version":3,"names":["CountryList","constructor","data","require","labelMap","valueMap","forEach","country","label","toLowerCase","value","getValue","getLabel","getLabels","map","getValues","getLabelList","getValueList","getData","setLabel","setEmpty","unshift","native","nativeData","countryList","module","exports"],"sources":["D:/Clone Web/Frontend-IMMI-462-master/Fontend-IMMI-462_Remake/node_modules/react-select-country-list/country-list.js"],"sourcesContent":["class CountryList {\n  constructor() {\n    this.data = require('./data.json')\n    this.labelMap = {}\n    this.valueMap = {}\n\n    this.data.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n  }\n\n  getValue(label) {\n    return this.labelMap[label.toLowerCase()]\n  }\n\n  getLabel(value) {\n    return this.valueMap[value.toLowerCase()]\n  }\n\n  getLabels() {\n    return this.data.map(country => country.label)\n  }\n\n  getValues() {\n    return this.data.map(country => country.value)\n  }\n\n  getLabelList() {\n    return this.labelMap\n  }\n\n  getValueList() {\n    return this.valueMap\n  }\n\n  getData() {\n    return this.data\n  }\n\n  setLabel(value, label) {\n    this.data.forEach(country => {\n      if (country.value === value) {\n        country.label = label\n        this.valueMap[country.value.toLowerCase()] = country.label\n      }\n    })\n\n    return this\n  }\n\n  setEmpty(label) {\n    this.data.unshift({\n      value: '',\n      label: label,\n    })\n    this.valueMap[''] = label\n    this.labelMap[label] = ''\n\n    return this\n  }\n\n  native() {\n    this.nativeData = require('./data-native.json')\n    this.nativeData.forEach(country => {\n      this.labelMap[country.label.toLowerCase()] = country.value\n      this.valueMap[country.value.toLowerCase()] = country.label\n    })\n\n    return this\n  }\n}\n\nconst countryList = () => {\n  if (!(this instanceof CountryList)) return new CountryList()\n}\n\nmodule.exports = countryList\n"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;EAChBC,WAAW,GAAG;IACZ,KAAKC,IAAL,GAAYC,OAAO,CAAC,aAAD,CAAnB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IAEA,KAAKH,IAAL,CAAUI,OAAV,CAAkBC,OAAO,IAAI;MAC3B,KAAKH,QAAL,CAAcG,OAAO,CAACC,KAAR,CAAcC,WAAd,EAAd,IAA6CF,OAAO,CAACG,KAArD;MACA,KAAKL,QAAL,CAAcE,OAAO,CAACG,KAAR,CAAcD,WAAd,EAAd,IAA6CF,OAAO,CAACC,KAArD;IACD,CAHD;EAID;;EAEDG,QAAQ,CAACH,KAAD,EAAQ;IACd,OAAO,KAAKJ,QAAL,CAAcI,KAAK,CAACC,WAAN,EAAd,CAAP;EACD;;EAEDG,QAAQ,CAACF,KAAD,EAAQ;IACd,OAAO,KAAKL,QAAL,CAAcK,KAAK,CAACD,WAAN,EAAd,CAAP;EACD;;EAEDI,SAAS,GAAG;IACV,OAAO,KAAKX,IAAL,CAAUY,GAAV,CAAcP,OAAO,IAAIA,OAAO,CAACC,KAAjC,CAAP;EACD;;EAEDO,SAAS,GAAG;IACV,OAAO,KAAKb,IAAL,CAAUY,GAAV,CAAcP,OAAO,IAAIA,OAAO,CAACG,KAAjC,CAAP;EACD;;EAEDM,YAAY,GAAG;IACb,OAAO,KAAKZ,QAAZ;EACD;;EAEDa,YAAY,GAAG;IACb,OAAO,KAAKZ,QAAZ;EACD;;EAEDa,OAAO,GAAG;IACR,OAAO,KAAKhB,IAAZ;EACD;;EAEDiB,QAAQ,CAACT,KAAD,EAAQF,KAAR,EAAe;IACrB,KAAKN,IAAL,CAAUI,OAAV,CAAkBC,OAAO,IAAI;MAC3B,IAAIA,OAAO,CAACG,KAAR,KAAkBA,KAAtB,EAA6B;QAC3BH,OAAO,CAACC,KAAR,GAAgBA,KAAhB;QACA,KAAKH,QAAL,CAAcE,OAAO,CAACG,KAAR,CAAcD,WAAd,EAAd,IAA6CF,OAAO,CAACC,KAArD;MACD;IACF,CALD;IAOA,OAAO,IAAP;EACD;;EAEDY,QAAQ,CAACZ,KAAD,EAAQ;IACd,KAAKN,IAAL,CAAUmB,OAAV,CAAkB;MAChBX,KAAK,EAAE,EADS;MAEhBF,KAAK,EAAEA;IAFS,CAAlB;IAIA,KAAKH,QAAL,CAAc,EAAd,IAAoBG,KAApB;IACA,KAAKJ,QAAL,CAAcI,KAAd,IAAuB,EAAvB;IAEA,OAAO,IAAP;EACD;;EAEDc,MAAM,GAAG;IACP,KAAKC,UAAL,GAAkBpB,OAAO,CAAC,oBAAD,CAAzB;IACA,KAAKoB,UAAL,CAAgBjB,OAAhB,CAAwBC,OAAO,IAAI;MACjC,KAAKH,QAAL,CAAcG,OAAO,CAACC,KAAR,CAAcC,WAAd,EAAd,IAA6CF,OAAO,CAACG,KAArD;MACA,KAAKL,QAAL,CAAcE,OAAO,CAACG,KAAR,CAAcD,WAAd,EAAd,IAA6CF,OAAO,CAACC,KAArD;IACD,CAHD;IAKA,OAAO,IAAP;EACD;;AAtEe;;AAyElB,MAAMgB,WAAW,GAAG,MAAM;EACxB,IAAI,EAAE,gBAAgBxB,WAAlB,CAAJ,EAAoC,OAAO,IAAIA,WAAJ,EAAP;AACrC,CAFD;;AAIAyB,MAAM,CAACC,OAAP,GAAiBF,WAAjB"},"metadata":{},"sourceType":"script"}