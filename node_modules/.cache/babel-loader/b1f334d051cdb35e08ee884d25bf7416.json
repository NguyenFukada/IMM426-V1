{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\Reactjs\\\\Basic\\\\base-react-redux\\\\src\\\\component\\\\User\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport _ from \"lodash\";\nimport { useState } from \"react\";\nimport Lightbox from \"react-awesome-lightbox\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Question = props => {\n  _s();\n\n  const {\n    data,\n    index\n  } = props;\n\n  if (_.isEmpty(data)) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  const [isPreviewImage, setIsPreviewImage] = useState();\n\n  const handleCheckedbox = (Event, aId, qId) => {\n    props.handleCheckBox(aId, qId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [data.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data: image/jpeg;base64,${data.image}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), isPreviewImage === true && /*#__PURE__*/_jsxDEV(Lightbox, {\n        image: `data: image/jpeg;base64,${data.image}`,\n        title: \"Question Image\",\n        onClose: () => setPrewImage(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [\"Question \", index + 1, \": \", data.questionDescription, \" ?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: data.answers && data.answers.length > 0 && data.answers.map((a, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"A-child\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              checked: a.isSelected,\n              onChange: Event => handleCheckedbox(Event, a.id, data.questionId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              children: a.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, `answer-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"iMXF1BC+aLOowg9+Az86DWqXp6A=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["_","useState","Lightbox","Question","props","data","index","isEmpty","isPreviewImage","setIsPreviewImage","handleCheckedbox","Event","aId","qId","handleCheckBox","image","setPrewImage","questionDescription","answers","length","map","a","isSelected","id","questionId","description"],"sources":["D:/Fullstack/Reactjs/Basic/base-react-redux/src/component/User/Question.js"],"sourcesContent":["import _ from \"lodash\";\r\nimport { useState } from \"react\";\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nconst Question = (props) => {\r\n    const { data, index } = props;\r\n    if (_.isEmpty(data)) {\r\n        return (<></>)\r\n    }\r\n    const [isPreviewImage, setIsPreviewImage] = useState()\r\n    const handleCheckedbox =(Event,aId, qId)=>{\r\n        props.handleCheckBox(aId, qId);\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n            data.image ? \r\n            <div className=\"q-image\">\r\n                <img src={`data: image/jpeg;base64,${data.image}`} />\r\n                       {isPreviewImage === true &&\r\n                            <Lightbox image={`data: image/jpeg;base64,${data.image}`}\r\n                                title={\"Question Image\"}\r\n                                onClose={() => setPrewImage(false)}>\r\n                            </Lightbox>}\r\n            </div>\r\n                : <div className=\"q-image\"></div>\r\n            }\r\n            <div className=\"question\">Question {index + 1}: {data.questionDescription} ?</div>\r\n            <div className=\"answer\">\r\n                {data.answers && data.answers.length > 0 &&\r\n                    data.answers.map((a, index) => {\r\n                        return (\r\n                            <div key={`answer-${index}`}\r\n                                className=\"A-child\">\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" \r\n                                    checked = {a.isSelected}\r\n                                        onChange={(Event) => handleCheckedbox(Event, a.id, data.questionId)}/>\r\n                                    <label className=\"form-check-label\" >\r\n                                        {a.description}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Question;"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkBF,KAAxB;;EACA,IAAIJ,CAAC,CAACO,OAAF,CAAUF,IAAV,CAAJ,EAAqB;IACjB,oBAAQ,qCAAR;EACH;;EACD,MAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;;EACA,MAAMS,gBAAgB,GAAE,CAACC,KAAD,EAAOC,GAAP,EAAYC,GAAZ,KAAkB;IACtCT,KAAK,CAACU,cAAN,CAAqBF,GAArB,EAA0BC,GAA1B;EACH,CAFD;;EAGA,oBACI;IAAA,WAEIR,IAAI,CAACU,KAAL,gBACA;MAAK,SAAS,EAAC,SAAf;MAAA,wBACI;QAAK,GAAG,EAAG,2BAA0BV,IAAI,CAACU,KAAM;MAAhD;QAAA;QAAA;QAAA;MAAA,QADJ,EAEYP,cAAc,KAAK,IAAnB,iBACI,QAAC,QAAD;QAAU,KAAK,EAAG,2BAA0BH,IAAI,CAACU,KAAM,EAAvD;QACI,KAAK,EAAE,gBADX;QAEI,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD;MAF/B;QAAA;QAAA;QAAA;MAAA,QAHhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,gBASM;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAXV,eAaI;MAAK,SAAS,EAAC,UAAf;MAAA,wBAAoCV,KAAK,GAAG,CAA5C,QAAiDD,IAAI,CAACY,mBAAtD;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ,eAcI;MAAK,SAAS,EAAC,QAAf;MAAA,UACKZ,IAAI,CAACa,OAAL,IAAgBb,IAAI,CAACa,OAAL,CAAaC,MAAb,GAAsB,CAAtC,IACGd,IAAI,CAACa,OAAL,CAAaE,GAAb,CAAiB,CAACC,CAAD,EAAIf,KAAJ,KAAc;QAC3B,oBACI;UACI,SAAS,EAAC,SADd;UAAA,uBAEI;YAAK,SAAS,EAAC,YAAf;YAAA,wBACI;cAAO,SAAS,EAAC,kBAAjB;cAAoC,IAAI,EAAC,UAAzC;cACA,OAAO,EAAIe,CAAC,CAACC,UADb;cAEI,QAAQ,EAAGX,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQU,CAAC,CAACE,EAAV,EAAclB,IAAI,CAACmB,UAAnB;YAFzC;cAAA;cAAA;cAAA;YAAA,QADJ,eAII;cAAO,SAAS,EAAC,kBAAjB;cAAA,UACKH,CAAC,CAACI;YADP;cAAA;cAAA;cAAA;YAAA,QAJJ;UAAA;YAAA;YAAA;YAAA;UAAA;QAFJ,GAAW,UAASnB,KAAM,EAA1B;UAAA;UAAA;UAAA;QAAA,QADJ;MAaH,CAdD;IAFR;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA,gBADJ;AAmCH,CA5CD;;GAAMH,Q;;KAAAA,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}