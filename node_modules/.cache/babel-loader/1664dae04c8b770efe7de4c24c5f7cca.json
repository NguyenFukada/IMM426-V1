{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\Reactjs\\\\Basic\\\\base-react-redux\\\\src\\\\component\\\\Admin\\\\Content\\\\TableUserPaginate.js\",\n    _s = $RefreshSig$();\n\nimport ReactPaginate from 'react-paginate';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nconst PaginatedItems = _ref => {\n  _s();\n\n  let {\n    itemsPerPage\n  } = _ref;\n  // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n  const [itemOffset, setItemOffset] = useState(0); // Simulate fetching items from another resources.\n  // (This could be items from props; or items loaded in a local state\n  // from an API endpoint with useEffect and useState)\n\n  const endOffset = itemOffset + itemsPerPage;\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  const currentItems = items.slice(itemOffset, endOffset);\n  const pageCount = Math.ceil(items.length / itemsPerPage); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaginatedItems, \"T5lRYnT7FeIRYhFW34vLrQET4eA=\");\n\n_c = PaginatedItems;\n\nconst TableUserPaginate = props => {\n  const {\n    listUsers\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [listUsers && listUsers.length > 0 && listUsers.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"@\", item.role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-info\",\n                onClick: () => props.handleViewUser(item),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning mx-3\",\n                onClick: () => props.handleClickUpdateUser(item),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => props.handleDeleteUser(item),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)]\n          }, `table-users-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this);\n        }), listUsers && listUsers.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: '4',\n            children: \"Not found data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = TableUserPaginate;\nexport default TableUserPaginate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginatedItems\");\n$RefreshReg$(_c2, \"TableUserPaginate\");","map":{"version":3,"names":["ReactPaginate","React","useEffect","useState","items","PaginatedItems","itemsPerPage","itemOffset","setItemOffset","endOffset","console","log","currentItems","slice","pageCount","Math","ceil","length","handlePageClick","event","newOffset","selected","TableUserPaginate","props","listUsers","map","item","index","id","username","email","role","handleViewUser","handleClickUpdateUser","handleDeleteUser"],"sources":["D:/Fullstack/Reactjs/Basic/base-react-redux/src/component/Admin/Content/TableUserPaginate.js"],"sourcesContent":["import ReactPaginate from 'react-paginate';\r\nimport React, { useEffect, useState } from 'react';\r\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n\r\n\r\nconst PaginatedItems =  ({ itemsPerPage }) => {\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n\r\n    // Simulate fetching items from another resources.\r\n    // (This could be items from props; or items loaded in a local state\r\n    // from an API endpoint with useEffect and useState)\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    const currentItems = items.slice(itemOffset, endOffset);\r\n    const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n        const newOffset = (event.selected * itemsPerPage) % items.length;\r\n        console.log(\r\n            `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        );\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Items currentItems={currentItems} />\r\n            \r\n        </>\r\n    );\r\n}\r\nconst TableUserPaginate = (props) => {\r\n    const { listUsers } = props;\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">username</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Role</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listUsers && listUsers.length > 0 &&\r\n                        listUsers.map((item, index) => {\r\n                            return (\r\n                                <tr key={`table-users-${index}`}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.username}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>@{item.role}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-info\"\r\n                                            onClick={() => props.handleViewUser(item)}>View</button>\r\n                                        <button className=\"btn btn-warning mx-3\"\r\n                                            onClick={() => props.handleClickUpdateUser(item)}>Update</button>\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick={() => props.handleDeleteUser(item)}>Delete</button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    {listUsers && listUsers.length === 0 &&\r\n                        <tr >\r\n                            <td colSpan={'4'}>Not found data</td>\r\n                        </tr>}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableUserPaginate"],"mappings":"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"},"metadata":{},"sourceType":"module"}