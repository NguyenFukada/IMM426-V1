{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack\\\\Reactjs\\\\Basic\\\\base-react-redux\\\\src\\\\component\\\\Admin\\\\Content\\\\Question\\\\Question.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport './Question.scss';\nimport { TbHeartPlus } from \"react-icons/tb\";\nimport { BiCheckboxMinus } from \"react-icons/bi\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport { AiFillMinusCircle } from \"react-icons/ai\";\nimport { RiImageAddFill } from \"react-icons/ri\";\nimport { v4 as uuidv4, validate } from 'uuid';\nimport { getAllQuizAdmin } from \"../../../../Services/apiService\";\nimport _ from \"lodash\";\nimport Lightbox from \"react-awesome-lightbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = props => {\n  _s();\n\n  const options = [// { value: 'EASY', label: 'EASY' },\n    // { value: 'MEDIUM', label: 'MEDIUM' },\n    // { value: 'HARD', label: 'HARD' },\n  ];\n  const [selectedQuiz, setSelectedQuiz] = useState({});\n  const [questions, setQuestions] = useState([{\n    id: uuidv4(),\n    description: '',\n    image: '',\n    imageName: '',\n    answers: [{\n      id: uuidv4(),\n      description: 'answer 1',\n      isCorrect: false\n    }]\n  }]);\n  const [prewImage, setPrewImage] = useState(false);\n  const [listQuiz, setListQuiz] = useState([]);\n\n  const fetchQuiz = async () => {\n    let res = await getAllQuizAdmin();\n\n    if (res && res.EC === 0) {\n      let newQuiz = res.DT.map(item => {\n        return {\n          value: item.id,\n          label: item.description\n        };\n      });\n      setListQuiz(newQuiz);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuiz();\n  }, []);\n  const [dataPreviewImage, setDataPreviewImage] = useState({\n    url: '',\n    title: ''\n  });\n\n  const handleAddRemoveQuestions = (type, id) => {\n    if (type === 'ADD') {\n      const newQuestion = {\n        id: uuidv4(),\n        description: '',\n        image: '',\n        imageName: '',\n        answers: [{\n          id: uuidv4(),\n          description: '',\n          isCorrect: false\n        }]\n      };\n      setQuestions([...questions, newQuestion]);\n    }\n\n    if (type === 'REMOVE') {\n      let questionClone = _.cloneDeep(questions);\n\n      questionClone = questionClone.filter(item => item.id !== id);\n      setQuestions(questionClone);\n    }\n  };\n\n  const handleAddRemoveAnswer = (type, questionId, id) => {\n    let questionsClone = _.cloneDeep(questions);\n\n    if (type === 'ADD') {\n      const newAnswer = {\n        id: uuidv4(),\n        description: '',\n        isCorrect: false\n      };\n      let index = questionsClone.findIndex(item => item.id === questionId);\n      questionsClone[index].answers.push(newAnswer);\n      setQuestions(questionsClone);\n    }\n\n    if (type === 'REMOVE') {\n      let index = questionsClone.findIndex(item => item.id === questionId);\n      questionsClone[index].answers = questionsClone[index].answers.filter(item => item.id !== id);\n      setQuestions(questionsClone);\n    }\n  };\n\n  const handleOnChange = (type, questionId, value) => {\n    if (type === 'QUESTION') {\n      let questionClone = _.cloneDeep(questions);\n\n      let index = questionClone.findIndex(item => item.id === questionId);\n\n      if (index > -1) {\n        questionClone[index].description = value;\n        setQuestions(questionClone);\n      }\n    }\n  };\n\n  const handleOnChangeFileQuestion = (questionId, Event) => {\n    let questionClone = _.cloneDeep(questions);\n\n    let index = questionClone.findIndex(item => item.id === questionId);\n\n    if (index > -1 && Event && Event.target && Event.target.files && Event.target.files[0]) {\n      questionClone[index].image = Event.target.files[0];\n      questionClone[index].imageName = Event.target.files[0].name;\n      console.log('file image: ', questionClone[index]);\n      setQuestions(questionClone);\n    }\n  };\n\n  const handleOnChangeAnswer = (type, questionId, answerId, value) => {\n    let questionClone = _.cloneDeep(questions);\n\n    let index = questionClone.findIndex(item => item.id === questionId);\n\n    if (index > -1) {\n      questionClone[index].answers = questionClone[index].answers.map((answer, index) => {\n        if (answer.id === answerId) {\n          if (type === 'CHECKED') {\n            answer.isCorrect = value;\n          }\n\n          if (type === 'INPUT') {\n            answer.description = value;\n          }\n        }\n\n        return answer;\n      });\n      setQuestions(questionClone);\n    }\n  };\n\n  const handleOnClickImage = questionId => {\n    let questionClone = _.cloneDeep(questions);\n\n    let index = questionClone.findIndex(item => item.id === questionId);\n\n    if (index > -1) {\n      setDataPreviewImage({\n        url: URL.createObjectURL(questionClone[index].image),\n        title: questionClone[index].imageName\n      });\n      setPrewImage(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Mange Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-new-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mb-2\",\n          children: \"Select Quiz:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedQuiz,\n          defaultValue: selectedQuiz,\n          onChange: setSelectedQuiz,\n          options: listQuiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 mb-2\",\n        children: \"Add questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), questions && questions.length > 0 && questions.map((question, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-main mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-floating description\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                placeholder: \"name@example.com\",\n                value: question.description,\n                onChange: event => handleOnChange('QUESTION', question.id, event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Question \", index + 1, \" description\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-upload\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-upload\",\n                htmlFor: `${question.id}`,\n                children: /*#__PURE__*/_jsxDEV(RiImageAddFill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 100\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: 'file',\n                hidden: true,\n                id: `${question.id}`,\n                onChange: Event => handleOnChangeFileQuestion(question.id, Event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.imageName ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  onClick: () => handleOnClickImage(question.id),\n                  children: question.imageName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this) : 'No file uploaded'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-add\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleAddRemoveQuestions('ADD', ''),\n                children: /*#__PURE__*/_jsxDEV(IoIosAdd, {\n                  className: \"icon-add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this), questions.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => handleAddRemoveQuestions('REMOVE', question.id),\n                children: /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n                  className: \"icon-remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 33\n          }, this), question.answers && question.answers.length > 0 && question.answers.map((answer, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"answers-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-check-input iscorrected\",\n                type: \"checkbox\",\n                checked: answer.isCorrect,\n                onChange: Event => handleOnChangeAnswer('CHECKED', question.id, answer.id, Event.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-floating col-6 description\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"type\",\n                  className: \"form-control answer-name\",\n                  placeholder: \"answer 1\",\n                  value: answer.description,\n                  onChange: Event => handleOnChangeAnswer('INPUT', question.id, answer.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Answer \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => handleAddRemoveAnswer('ADD', question.id),\n                  children: /*#__PURE__*/_jsxDEV(IoIosAdd, {\n                    className: \"icon-add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 53\n                }, this), question.answers.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => handleAddRemoveAnswer('REMOVE', question.id, answer.id),\n                  children: /*#__PURE__*/_jsxDEV(BiCheckboxMinus, {\n                    className: \"icon-remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 49\n              }, this)]\n            }, answer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 45\n            }, this);\n          })]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this);\n      }), questions && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \" Save questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), prewImage === true && /*#__PURE__*/_jsxDEV(Lightbox, {\n      image: dataPreviewImage.url,\n      title: dataPreviewImage.title,\n      onClose: () => setPrewImage(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Questions, \"r6lDRZ/b/mLGKqwpPecjYmPDtUw=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["useEffect","useState","Select","TbHeartPlus","BiCheckboxMinus","IoIosAdd","AiFillMinusCircle","RiImageAddFill","v4","uuidv4","validate","getAllQuizAdmin","_","Lightbox","Questions","props","options","selectedQuiz","setSelectedQuiz","questions","setQuestions","id","description","image","imageName","answers","isCorrect","prewImage","setPrewImage","listQuiz","setListQuiz","fetchQuiz","res","EC","newQuiz","DT","map","item","value","label","dataPreviewImage","setDataPreviewImage","url","title","handleAddRemoveQuestions","type","newQuestion","questionClone","cloneDeep","filter","handleAddRemoveAnswer","questionId","questionsClone","newAnswer","index","findIndex","push","handleOnChange","handleOnChangeFileQuestion","Event","target","files","name","console","log","handleOnChangeAnswer","answerId","answer","handleOnClickImage","URL","createObjectURL","length","question","event","cursor","checked"],"sources":["D:/Fullstack/Reactjs/Basic/base-react-redux/src/component/Admin/Content/Question/Question.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport Select from \"react-select\"\r\nimport './Question.scss'\r\nimport { TbHeartPlus } from \"react-icons/tb\"\r\nimport { BiCheckboxMinus } from \"react-icons/bi\"\r\nimport { IoIosAdd } from \"react-icons/io\"\r\nimport { AiFillMinusCircle } from \"react-icons/ai\"\r\nimport { RiImageAddFill } from \"react-icons/ri\"\r\nimport { v4 as uuidv4, validate } from 'uuid'\r\nimport { getAllQuizAdmin } from \"../../../../Services/apiService\";\r\nimport _ from \"lodash\"\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nconst Questions = (props) => {\r\n    const options = [\r\n        // { value: 'EASY', label: 'EASY' },\r\n        // { value: 'MEDIUM', label: 'MEDIUM' },\r\n        // { value: 'HARD', label: 'HARD' },\r\n    ]\r\n    const [selectedQuiz, setSelectedQuiz] = useState({});\r\n    const [questions, setQuestions] = useState(\r\n        [\r\n            {\r\n                id: uuidv4(),\r\n                description: '',\r\n                image: '',\r\n                imageName: '',\r\n                answers: [\r\n                    {\r\n                        id: uuidv4(),\r\n                        description: 'answer 1',\r\n                        isCorrect: false\r\n                    },\r\n                ]\r\n            },\r\n\r\n        ])\r\n    const [prewImage, setPrewImage] = useState(false);\r\n    const [listQuiz, setListQuiz] = useState([]);\r\n    const fetchQuiz = async () => {\r\n        let res = await getAllQuizAdmin();\r\n        if (res && res.EC === 0) {\r\n            let newQuiz = res.DT.map(item => {\r\n                return {\r\n                    value: item.id,\r\n                    label: item.description\r\n                }\r\n            })\r\n            setListQuiz(newQuiz);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        fetchQuiz();\r\n    }, [])\r\n    const [dataPreviewImage, setDataPreviewImage] = useState({\r\n        url: '',\r\n        title: ''\r\n    })\r\n    const handleAddRemoveQuestions = (type, id) => {\r\n        if (type === 'ADD') {\r\n            const newQuestion = {\r\n                id: uuidv4(),\r\n                description: '',\r\n                image: '',\r\n                imageName: '',\r\n                answers: [\r\n                    {\r\n                        id: uuidv4(),\r\n                        description: '',\r\n                        isCorrect: false\r\n                    },\r\n\r\n                ]\r\n            }\r\n            setQuestions([...questions, newQuestion]);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            questionClone = questionClone.filter(item => item.id !== id)\r\n            setQuestions(questionClone);\r\n        }\r\n    }\r\n    const handleAddRemoveAnswer = (type, questionId, id) => {\r\n        let questionsClone = _.cloneDeep(questions);\r\n        if (type === 'ADD') {\r\n            const newAnswer =\r\n            {\r\n                id: uuidv4(),\r\n                description: '',\r\n                isCorrect: false\r\n            }\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers.push(newAnswer);\r\n            setQuestions(questionsClone);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers = questionsClone[index].answers.filter(item => item.id !== id)\r\n            setQuestions(questionsClone);\r\n        }\r\n    }\r\n    const handleOnChange = (type, questionId, value) => {\r\n        if (type === 'QUESTION') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            let index = questionClone.findIndex(item => item.id === questionId)\r\n            if (index > -1) {\r\n                questionClone[index].description = value;\r\n                setQuestions(questionClone);\r\n            }\r\n        }\r\n    }\r\n    const handleOnChangeFileQuestion = (questionId, Event) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1 && Event && Event.target && Event.target.files && Event.target.files[0]){\r\n            questionClone[index].image = Event.target.files[0];\r\n            questionClone[index].imageName = Event.target.files[0].name;\r\n            console.log('file image: ', questionClone[index]);\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnChangeAnswer = (type,questionId, answerId, value) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1) {\r\n            questionClone[index].answers = questionClone[index].answers.map((answer, index)=>{\r\n                if (answer.id === answerId){\r\n                    if (type==='CHECKED'){\r\n                        answer.isCorrect = value;\r\n                    }\r\n                    if (type === 'INPUT'){\r\n                        answer.description = value;\r\n                    }\r\n                }\r\n                return answer;\r\n            })\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnClickImage = (questionId) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > -1) {\r\n           setDataPreviewImage({\r\n               url: URL.createObjectURL(questionClone[index].image),\r\n               title: questionClone[index].imageName\r\n           })\r\n            setPrewImage(true);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"question-container\">\r\n            <div className=\"title\">\r\n                Mange Questions\r\n            </div>\r\n            <hr />\r\n            <div className=\"add-new-question\">\r\n                <div className=\"col-6 form-group\">\r\n                    <label className=\"mb-2\">Select Quiz:</label>\r\n                    <Select\r\n                        value={selectedQuiz}\r\n                        defaultValue={selectedQuiz}\r\n                        onChange={setSelectedQuiz}\r\n                        options={listQuiz}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-3 mb-2\">Add questions:</div>\r\n                {\r\n                    questions && questions.length > 0 && questions.map((question, index) => {\r\n                        return (\r\n                            <div key = {question.id } className=\"q-main mb-5\">\r\n                                <div className=\"question-content\">\r\n                                    <div className=\"form-floating description\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"name@example.com\"\r\n                                            value={question.description}\r\n                                            onChange={(event) => handleOnChange('QUESTION', question.id, event.target.value)} />\r\n                                        <label>Question {index + 1} description</label>\r\n                                    </div>\r\n                                    <div className=\"group-upload\">\r\n                                        <label className=\"label-upload\" htmlFor={`${question.id}`}><RiImageAddFill  /></label>\r\n                                        <input type={'file'} hidden id = {`${question.id}`} \r\n                                        onChange={(Event) => handleOnChangeFileQuestion(question.id, Event)}></input>\r\n                                        <span>{question.imageName ? \r\n                                        <span style={{cursor:'pointer'}} onClick={()=> handleOnClickImage(question.id)}>{question.imageName}</span> : \r\n                                        'No file uploaded'}</span>\r\n                                    </div>\r\n                                    <div className=\"btn-add\">\r\n\r\n                                        <span onClick={() => handleAddRemoveQuestions('ADD', '')}>\r\n                                            <IoIosAdd className=\"icon-add\" /></span>\r\n                                        {questions.length > 1 &&\r\n                                            <span onClick={() => handleAddRemoveQuestions('REMOVE', question.id)}>\r\n                                                <AiFillMinusCircle className=\"icon-remove\" /></span>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    question.answers && question.answers.length > 0\r\n                                    && question.answers.map((answer, index) => {\r\n                                        return (\r\n                                            <div className=\"answers-content\" key={answer.id}>\r\n                                                <input className=\"form-check-input iscorrected\" type=\"checkbox\" \r\n                                                checked={answer.isCorrect}\r\n                                                onChange={(Event) => handleOnChangeAnswer('CHECKED', question.id, answer.id,Event.target.checked)}/>\r\n                                                <div className=\"form-floating col-6 description\">\r\n                                                    <input type=\"type\" className=\"form-control answer-name\"\r\n                                                        placeholder=\"answer 1\" value={answer.description} \r\n                                                        onChange={(Event) => handleOnChangeAnswer('INPUT',question.id,answer.id)}/>\r\n                                                    <label>Answer {index + 1}</label>\r\n                                                </div>\r\n                                                <div className=\"btn-group\">\r\n                                                    <span onClick={() => handleAddRemoveAnswer('ADD', question.id)}>\r\n                                                        <IoIosAdd className=\"icon-add\" />\r\n                                                    </span>\r\n                                                    {question.answers.length > 1 &&\r\n                                                        <span\r\n                                                            onClick={() => handleAddRemoveAnswer('REMOVE', question.id, answer.id)}>\r\n                                                            <BiCheckboxMinus className=\"icon-remove\" />\r\n                                                        </span>\r\n                                                    }\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                               \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    questions && questions.length > 0 && \r\n                    <button className=\"btn btn-primary\"> Save questions</button>\r\n                }\r\n            </div>\r\n            {prewImage === true &&\r\n                <Lightbox image={dataPreviewImage.url}\r\n                    title={dataPreviewImage.title}\r\n                    onClose={() => setPrewImage(false)}>\r\n                </Lightbox>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Questions"],"mappings":"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"},"metadata":{},"sourceType":"module"}