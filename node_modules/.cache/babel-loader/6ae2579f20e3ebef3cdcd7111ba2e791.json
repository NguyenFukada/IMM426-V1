{"ast":null,"code":"var _jsxFileName = \"D:\\\\Clone Web\\\\Frontend-IMMI-462-master\\\\Fontend-IMMI-462_Remake\\\\src\\\\component\\\\DatePicker.js\";\nimport React, { Component } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport moment from \"moment\";\nimport { KeyCodeUtils } from \"../\";\nimport './DatePicker.scss'; // const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\n//         onChange={onInputChange}\n//         onBlur={onInputBlur}\n//     />;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DatePicker extends Component {\n  constructor() {\n    super(...arguments);\n    this.flatpickrNode = null;\n\n    this.nodeRef = element => {\n      this.flatpickr = element && element.flatpickr;\n      this.flatpickrNode = element && element.node;\n\n      if (this.flatpickrNode) {\n        this.flatpickrNode.addEventListener('blur', this.handleBlur);\n        this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\n      }\n    };\n\n    this.handlerKeyDown = event => {\n      const keyCode = event.which || event.keyCode;\n\n      if (keyCode === KeyCodeUtils.ENTER) {\n        event.preventDefault();\n        const {\n          onChange\n        } = this.props;\n        const value = event.target.value; // Take the blur event and process the string value\n\n        const valueMoment = moment(value, 'DD/MM/YYYY');\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\n      }\n    };\n\n    this.handleBlur = event => {\n      const {\n        onChange\n      } = this.props;\n      const value = event.target.value; // Take the blur event and process the string value\n\n      event.preventDefault();\n      const valueMoment = moment(value, 'DD/MM/YYYY');\n      onChange([valueMoment.toDate(), valueMoment.toDate()]);\n    };\n\n    this.onOpen = () => {\n      if (this.flatpickrNode) {\n        this.flatpickrNode.blur();\n      }\n    };\n\n    this.checkDateValue = (str, max) => {\n      if (str.charAt(0) !== '0' || str === '00') {\n        var num = parseInt(str);\n        if (isNaN(num) || num <= 0 || num > max) num = 1;\n        str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n      }\n\n      ;\n      return str;\n    };\n\n    this.autoFormatOnChange = (value, seperator) => {\n      var input = value;\n      let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`); //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\n\n      if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\n      var values = input.split(seperator).map(function (v) {\n        return v.replace(/\\D/g, '');\n      });\n      if (values[0]) values[0] = this.checkDateValue(values[0], 31);\n      if (values[1]) values[1] = this.checkDateValue(values[1], 12);\n      var output = values.map(function (v, i) {\n        return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\n      });\n      return output.join('').substr(0, 14);\n    };\n\n    this.onInputChange = e => {\n      if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\n        let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\n        e.target.value = converted;\n      }\n    };\n\n    this.onInputBlur = e => {};\n\n    this.SEPERATOR = \"/\";\n    this.DATE_FORMAT_AUTO_FILL = \"d/m/Y\";\n    this.DISPLAY_FORMAT = \"d/m/Y\";\n  }\n\n  componentWillUnmount() {\n    if (this.flatpickrNode) {\n      this.flatpickrNode.removeEventListener('blur', this.handleBlur);\n      this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\n    }\n  }\n\n  close() {\n    this.flatpickr.close();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      minDate,\n      onClose,\n      ...otherProps\n    } = this.props;\n    const options = {\n      dateFormat: this.DISPLAY_FORMAT,\n      allowInput: true,\n      disableMobile: true,\n      onClose: onClose,\n      onOpen: this.onOpen\n    };\n\n    if (minDate) {\n      options.minDate = minDate;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Flatpickr, {\n      ref: this.nodeRef,\n      value: value,\n      onChange: onChange,\n      options: options // render={\n      //     ({ defaultValue, value, ...props }, ref) => {\n      //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\n      //     }\n      // }\n      ,\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DatePicker;","map":{"version":3,"names":["React","Component","Flatpickr","moment","KeyCodeUtils","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","event","keyCode","which","ENTER","preventDefault","onChange","props","value","target","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","toString","length","autoFormatOnChange","seperator","input","regexForDeleting","RegExp","test","substr","values","split","map","v","replace","output","i","join","onInputChange","e","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","componentWillUnmount","removeEventListener","close","render","minDate","onClose","otherProps","options","dateFormat","allowInput","disableMobile"],"sources":["D:/Clone Web/Frontend-IMMI-462-master/Fontend-IMMI-462_Remake/src/component/DatePicker.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport moment from \"moment\"\nimport { KeyCodeUtils } from \"../\";\nimport './DatePicker.scss';\n\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\n//         onChange={onInputChange}\n//         onBlur={onInputBlur}\n//     />;\n// };\n\nclass DatePicker extends Component {\n\n    flatpickrNode = null;\n\n    nodeRef = element => {\n        this.flatpickr = element && element.flatpickr;\n        this.flatpickrNode = element && element.node;\n        if (this.flatpickrNode) {\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\n        }\n    };\n\n    handlerKeyDown = (event) => {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === KeyCodeUtils.ENTER) {\n            event.preventDefault();\n            const { onChange } = this.props;\n            const value = event.target.value;\n\n            // Take the blur event and process the string value\n            const valueMoment = moment(value, 'DD/MM/YYYY');\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.flatpickrNode) {\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\n        }\n    }\n\n    handleBlur = (event) => {\n        const { onChange } = this.props;\n        const value = event.target.value;\n\n        // Take the blur event and process the string value\n        event.preventDefault();\n        const valueMoment = moment(value, 'DD/MM/YYYY');\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\n    };\n\n    onOpen = () => {\n        if (this.flatpickrNode) {\n            this.flatpickrNode.blur();\n        }\n    }\n\n    close() {\n        this.flatpickr.close();\n    }\n\n    checkDateValue = (str, max) => {\n        if (str.charAt(0) !== '0' || str === '00') {\n            var num = parseInt(str);\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n        };\n        return str;\n    }\n\n    \n\n    autoFormatOnChange = (value, seperator) => {\n        var input = value;\n\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\n\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\n\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\n\n        var values = input.split(seperator).map(function (v) {\n            return v.replace(/\\D/g, '')\n        });\n\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\n        var output = values.map(function (v, i) {\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\n        });\n        return output.join('').substr(0, 14);\n    }\n\n    onInputChange = (e) => {\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\n            e.target.value = converted;\n        }\n    }\n\n    onInputBlur = (e) => {\n    }\n\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\n    SEPERATOR = \"/\";\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\n\n    // dat.nt : Format ngày hiển thị\n    DISPLAY_FORMAT = \"d/m/Y\";\n\n    render() {\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\n        const options = {\n            dateFormat: this.DISPLAY_FORMAT,\n            allowInput: true,\n            disableMobile: true,\n            onClose: onClose,\n            onOpen: this.onOpen\n        };\n        if (minDate) {\n            options.minDate = minDate;\n        }\n        return (\n            <Flatpickr\n                ref={this.nodeRef}\n                value={value}\n                onChange={onChange}\n                options={options}\n                // render={\n                //     ({ defaultValue, value, ...props }, ref) => {\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\n                //     }\n                // }\n                {...otherProps}\n            />\n        );\n    }\n}\n\nexport default DatePicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}