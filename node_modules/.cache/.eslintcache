[{"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\index.js":"1","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\reportWebVitals.js":"2","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\App.js":"3","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\store.js":"4","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\action\\counterAction.js":"5","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\rootReducer.js":"6","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\counterReducer.js":"7","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Header\\Header.js":"8","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\User.js":"9","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Admin.js":"10","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Home\\HomePage.js":"11","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\SideBar.js":"12","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Manageuser.js":"13","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\DashBoard.js":"14","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalCreateUser.js":"15","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ManageUser.js":"16","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Services\\apiService.js":"17","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\utils\\axiosCustomize.js":"18","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\TableUser.js":"19","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalUpdateUser.js":"20","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalViewUser.js":"21","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalDeleteUser.js":"22","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\TableUserPaginate.js":"23","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Auth\\Login.js":"24","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Layout.js":"25","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Auth\\Register.js":"26","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\userReducer.js":"27","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\ListQuiz.js":"28","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\DetailQuiz.js":"29","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\Question.js":"30","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\ModalResult.js":"31","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ManageQuiz.js":"32","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\TableQuiz.js":"33","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ModalEditQuiz.js":"34","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ModalDeleteQuiz.js":"35","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Question\\Question.js":"36","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\QuizQA.js":"37","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\AssignQuiz.js":"38","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\QuizContent\\RightContent.js":"39","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\QuizContent\\CountDown.js":"40","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Route\\PrivateRoute.js":"41","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\action\\userAction.js":"42","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Header\\Language.js":"43","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\utils\\i18n.js":"44","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\index.js":"45","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\reportWebVitals.js":"46","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\Layout.js":"47","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\App.js":"48","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\utils\\i18n.js":"49","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\Header.js":"50","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\store.js":"51","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FirstPage.js":"52","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\DatePicker.js":"53","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\utils\\KeyCodeUtils.js":"54","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SecondPage.js":"55","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FormNationCard.js":"56","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\ThirdPage.js":"57","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FourPage.js":"58","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FifthPage.js":"59","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SixPage.js":"60","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SevenPage.js":"61","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\DetailStudies.js":"62","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\EightPage_New.js":"63","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\NinePage.js":"64","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\TenthPage.js":"65","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\EleventhPage.js":"66","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\TwelvethPage.js":"67","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\ThreeTeenthPage.js":"68","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\reducer\\rootReducer.js":"69","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\reducer\\userReducer.js":"70","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\Notice.js":"71","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FourteenPage.js":"72","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SubmitPage.js":"73"},{"size":1122,"mtime":1687504353806,"results":"74","hashOfConfig":"75"},{"size":362,"mtime":499162500000,"results":"76","hashOfConfig":"75"},{"size":742,"mtime":1687103093852,"results":"77","hashOfConfig":"75"},{"size":634,"mtime":1684803006398,"results":"78","hashOfConfig":"75"},{"size":266,"mtime":1653057474077,"results":"79","hashOfConfig":"75"},{"size":258,"mtime":1684766477413,"results":"80","hashOfConfig":"75"},{"size":519,"mtime":1653057415985,"results":"81","hashOfConfig":"75"},{"size":2884,"mtime":1687503354822,"results":"82","hashOfConfig":"75"},{"size":130,"mtime":1684013159184,"results":"83","hashOfConfig":"75"},{"size":1589,"mtime":1687529820535,"results":"84","hashOfConfig":"75"},{"size":1302,"mtime":1687506685533,"results":"85","hashOfConfig":"75"},{"size":3816,"mtime":1686702189231,"results":"86","hashOfConfig":"75"},{"size":939,"mtime":1684482425391,"results":"87","hashOfConfig":"75"},{"size":3976,"mtime":1687579841181,"results":"88","hashOfConfig":"75"},{"size":5610,"mtime":1684742397412,"results":"89","hashOfConfig":"75"},{"size":4433,"mtime":1686702030808,"results":"90","hashOfConfig":"75"},{"size":3656,"mtime":1687578997307,"results":"91","hashOfConfig":"75"},{"size":1364,"mtime":1684812600638,"results":"92","hashOfConfig":"75"},{"size":2001,"mtime":1684639909029,"results":"93","hashOfConfig":"75"},{"size":5282,"mtime":1686476572882,"results":"94","hashOfConfig":"75"},{"size":3762,"mtime":1684635648521,"results":"95","hashOfConfig":"75"},{"size":1661,"mtime":1684670561894,"results":"96","hashOfConfig":"75"},{"size":3351,"mtime":1684670782567,"results":"97","hashOfConfig":"75"},{"size":3589,"mtime":1687503419968,"results":"98","hashOfConfig":"75"},{"size":2668,"mtime":1687507374932,"results":"99","hashOfConfig":"75"},{"size":4341,"mtime":1684841018835,"results":"100","hashOfConfig":"75"},{"size":1737,"mtime":1687493963406,"results":"101","hashOfConfig":"75"},{"size":1672,"mtime":1687485769827,"results":"102","hashOfConfig":"75"},{"size":5549,"mtime":1687508380068,"results":"103","hashOfConfig":"75"},{"size":2144,"mtime":1687146724113,"results":"104","hashOfConfig":"75"},{"size":1148,"mtime":1684999014428,"results":"105","hashOfConfig":"75"},{"size":4651,"mtime":1687101602924,"results":"106","hashOfConfig":"75"},{"size":3035,"mtime":1686494129345,"results":"107","hashOfConfig":"75"},{"size":4403,"mtime":1686479769257,"results":"108","hashOfConfig":"75"},{"size":1465,"mtime":1686494209231,"results":"109","hashOfConfig":"75"},{"size":13530,"mtime":1687104597616,"results":"110","hashOfConfig":"75"},{"size":15357,"mtime":1687141210860,"results":"111","hashOfConfig":"75"},{"size":2555,"mtime":1687105863276,"results":"112","hashOfConfig":"75"},{"size":1893,"mtime":1687427649595,"results":"113","hashOfConfig":"75"},{"size":984,"mtime":1687424086069,"results":"114","hashOfConfig":"75"},{"size":472,"mtime":1687486360453,"results":"115","hashOfConfig":"75"},{"size":423,"mtime":1687493224834,"results":"116","hashOfConfig":"75"},{"size":719,"mtime":1687506151428,"results":"117","hashOfConfig":"75"},{"size":882,"mtime":1687579327604,"results":"118","hashOfConfig":"75"},{"size":1089,"mtime":1687696150529,"results":"119","hashOfConfig":"120"},{"size":362,"mtime":499162500000,"results":"121","hashOfConfig":"120"},{"size":2799,"mtime":1687834269343,"results":"122","hashOfConfig":"120"},{"size":525,"mtime":1687704119645,"results":"123","hashOfConfig":"120"},{"size":882,"mtime":1687579327604,"results":"124","hashOfConfig":"120"},{"size":683,"mtime":1687682881452,"results":"125","hashOfConfig":"120"},{"size":634,"mtime":1687605969088,"results":"126","hashOfConfig":"120"},{"size":14477,"mtime":1687850235899,"results":"127","hashOfConfig":"120"},{"size":4806,"mtime":1687617935055,"results":"128","hashOfConfig":"120"},{"size":651,"mtime":1687617918222,"results":"129","hashOfConfig":"120"},{"size":25423,"mtime":1687864987113,"results":"130","hashOfConfig":"120"},{"size":4930,"mtime":1687864934483,"results":"131","hashOfConfig":"120"},{"size":7615,"mtime":1687860153101,"results":"132","hashOfConfig":"120"},{"size":4725,"mtime":1687840117283,"results":"133","hashOfConfig":"120"},{"size":11677,"mtime":1687850211306,"results":"134","hashOfConfig":"120"},{"size":7215,"mtime":1687850278197,"results":"135","hashOfConfig":"120"},{"size":5909,"mtime":1687850266636,"results":"136","hashOfConfig":"120"},{"size":5859,"mtime":1687856941203,"results":"137","hashOfConfig":"120"},{"size":5813,"mtime":1687850193460,"results":"138","hashOfConfig":"120"},{"size":14284,"mtime":1687851202030,"results":"139","hashOfConfig":"120"},{"size":16790,"mtime":1687851779082,"results":"140","hashOfConfig":"120"},{"size":29612,"mtime":1687855152922,"results":"141","hashOfConfig":"120"},{"size":11177,"mtime":1687855025563,"results":"142","hashOfConfig":"120"},{"size":26892,"mtime":1687855931291,"results":"143","hashOfConfig":"120"},{"size":180,"mtime":1687695045319,"results":"144","hashOfConfig":"120"},{"size":1365,"mtime":1687862264135,"results":"145","hashOfConfig":"120"},{"size":659,"mtime":1687703915310,"results":"146","hashOfConfig":"120"},{"size":12593,"mtime":1687840482697,"results":"147","hashOfConfig":"120"},{"size":2126,"mtime":1687754491735,"results":"148","hashOfConfig":"120"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},"58d4ez",{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"153"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"153"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"153"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"153"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"153"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"153"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"153"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"153"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"153"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"153"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"153"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"153"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"153"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"153"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"153"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"153"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"153"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"153"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"153"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"153"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"153"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},"iowv7s",{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"308"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"308"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"308"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"308"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"308"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"308"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"308"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"308"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"308"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"308"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"308"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"308"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"308"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"308"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"308"},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"399"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"308"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\index.js",["410"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter} from \"react-router-dom\";\nimport Layout from './Layout';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css'\nimport 'nprogress/nprogress.css'\nimport \"react-awesome-lightbox/build/style.css\";\nimport i18n from './utils/i18n';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n      <Layout />\n    </BrowserRouter>\n    {/* <React.StrictMode>\n      <App />\n    </React.StrictMode> */}\n    </PersistGate>\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\reportWebVitals.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\App.js",["411"],[],"import PerfectScrollbar from 'react-perfect-scrollbar'\nimport './App.scss'; \nimport Header from './component/Header/Header';\nimport {  Link } from \"react-router-dom\";\nimport { Outlet } from \"react-router-dom\";\nconst App = () => {\n  // const count = useSelector(state => state.counter.count);\n  // const dispatch = useDispatch();\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"header-container\">\n        <Header></Header>\n      </div>\n      <div className='main-container'>\n        <div className='sidenav-container'>\n\n        </div>\n        <div className='app-content'>\n          < PerfectScrollbar>\n            <Outlet />\n          </PerfectScrollbar>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\store.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\action\\counterAction.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\rootReducer.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\counterReducer.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Header\\Header.js",["412","413"],[],"import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../Services/apiService';\r\nimport { toast } from 'react-toastify';\r\nimport { doLogin, doLogout } from '../../redux/action/userAction';\r\nimport Language from './Language';\r\nconst Header = () => {\r\n    const navigate = useNavigate();\r\n    const account = useSelector(state => state.user.account);\r\n    const dispatch = useDispatch();\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated);\r\n    const handleLogin = () => {\r\n        navigate('/login');\r\n    }\r\n    const handleRegister = () => {\r\n        navigate('/register');\r\n    }\r\n    const handleLogout = async () => {\r\n        console.log(account.email, account.refresh_token);\r\n        let res = await logout(account.email, account.refresh_toke);\r\n        if (res && res.EC === 0){\r\n            // clear data redux\r\n            dispatch(doLogout())\r\n            navigate('/login');\r\n        }else{\r\n            toast.error(res.EM);\r\n        }\r\n    }\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\r\n                <NavLink to='/' className='navbar-brand'>LOGHORIZON</NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <NavLink to='/home' className='nav-link'>HOME</NavLink>\r\n                        <NavLink to='/users' className='nav-link'>USERS</NavLink>\r\n                        <NavLink to='/admins' className='nav-link'>ADMIN</NavLink>\r\n                    </Nav>\r\n                    <Nav>\r\n                        {isAuthenticated === false ?\r\n                            <>\r\n                                <button className='btn-login' onClick={() => handleLogin()}>Log in</button>\r\n                                <button className='btn-signup' onClick={() => handleRegister()}>Sign up</button>\r\n                            </>\r\n                            :\r\n                            <NavDropdown title=\"Setting\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={() => handleLogout()} >Log out</NavDropdown.Item>\r\n                                <NavDropdown.Item >Profile</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        }\r\n                        <Language />\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\User.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Admin.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Home\\HomePage.js",["414"],[],"import { useNavigate } from 'react-router-dom';\r\nimport videoHomePage from '../../assets/video-homepage.mp4'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation, Trans} from 'react-i18next';\r\n\r\nconst HomePage = () => {\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated);\r\n    const navigate = useNavigate();\r\n    const { t } = useTranslation();\r\n    return (\r\n        <div className=\"homepage-container\">\r\n            <video autoPlay muted loop>\r\n                <source src={videoHomePage} type=\"video/mp4\">\r\n                </source>\r\n            </video>\r\n            <div className='homepage-content'>\r\n                <div className='title-1'>\r\n                {t('homepage.title1')}\r\n                </div>\r\n                <div className='title-2'>\r\n                    {t('homepage.title2')}\r\n                </div>\r\n                <div className='title-3'>\r\n                    {isAuthenticated === true ?\r\n                        <button className='btn btn-primary' onClick={()=>navigate('/users')}>Start quiz now</button>\r\n                        : <button className='btn-title-3' onClick={() => navigate('/login')}>Get's started. It free</button>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\SideBar.js",["415"],[],"import 'react-pro-sidebar/dist/css/styles.css'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {\r\n    ProSidebar,\r\n    Menu,\r\n    MenuItem,\r\n    SubMenu,\r\n    SidebarHeader,\r\n    SidebarFooter,\r\n    SidebarContent,\r\n} from 'react-pro-sidebar';\r\nimport { FaTachometerAlt, FaGem} from 'react-icons/fa';\r\nimport sidebarBg from '../../assets/bg2.jpg';\r\nimport { DiReact } from \"react-icons/di\"\r\nimport '../Admin/SideBar.scss'\r\nimport {MdDashboard} from \"react-icons/md\"\r\nimport './SideBar.scss'\r\nconst SideBar = ({ image, collapsed, rtl, toggled, handleToggleSidebar }) => {\r\n    const navigate = useNavigate();\r\n    return(\r\n        <> \r\n            <ProSidebar\r\n                image={sidebarBg}\r\n                collapsed={collapsed}\r\n                toggled={toggled}\r\n                breakPoint=\"md\"\r\n                onToggle={handleToggleSidebar}\r\n            >\r\n                <SidebarHeader className='sidebarheader'>\r\n                    <div\r\n                        style={{\r\n                            padding: '24px',\r\n                            textTransform: 'uppercase',\r\n                            fontWeight: 'bold',\r\n                            fontSize: 14,\r\n                            letterSpacing: '1px',\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            whiteSpace: 'nowrap',\r\n                        }}\r\n                    >\r\n                    <DiReact  size={'3em'} color={\"00bfff\"}/>\r\n                        <span onClick={()=>navigate('/')} className='title-direact'>LOGHORIZON</span>\r\n                    </div>\r\n                </SidebarHeader>\r\n\r\n                <SidebarContent>\r\n                    <Menu iconShape=\"circle\">\r\n                        <MenuItem\r\n                            icon={<FaTachometerAlt />}\r\n                            suffix={<span className=\"badge red\">New</span>}\r\n                        >\r\n                            Dashboard\r\n                            <Link to=\"/admins\" />\r\n                        </MenuItem>\r\n                    </Menu>\r\n                    <Menu iconShape=\"circle\">\r\n                        <SubMenu\r\n                            icon={<FaGem />}\r\n                            title=\"Features\"\r\n                        >\r\n                            <MenuItem> Quản lý Users\r\n                                <Link to=\"/admins/manage-users\" /></MenuItem>\r\n                            <MenuItem > Quản lý Bài Quiz\r\n                                <Link to=\"/admins/manage-quizzes\" /></MenuItem>\r\n                            <MenuItem> Quản lý Câu Hỏi\r\n                                <Link to=\"/admins/manage-questions\" /></MenuItem>\r\n                        </SubMenu>\r\n                    </Menu>\r\n                </SidebarContent>\r\n\r\n                <SidebarFooter style={{ textAlign: 'center' }}>\r\n                    <div\r\n                        className=\"sidebar-btn-wrapper\"\r\n                        style={{\r\n                            padding: '20px 24px',\r\n                        }}\r\n                    >\r\n                        <a\r\n                            href=\"https://github.com/azouaoui-med/react-pro-sidebar\"\r\n                            target=\"_blank\"\r\n                            className=\"sidebar-btn\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                           \r\n                            <span style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n                                &#169; Loghorizon\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n                </SidebarFooter>\r\n            </ProSidebar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SideBar;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Manageuser.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\DashBoard.js",["416"],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalCreateUser.js",["417","418","419"],[],"import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\r\nimport {  toast } from \"react-toastify\";\r\nimport { Toast } from 'bootstrap';\r\nimport { postcreateNewUser } from '../../../Services/apiService'\r\nconst ModalCreateUser = (props) => {\r\n    const { show, setShow } = props\r\n    const [email,setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUsername] = useState('');\r\n    const [image, setImage] = useState('')\r\n    const [role,setRole] = useState('USER');\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEmail(\"\"); setPassword(\"\"); setUsername(\"\"); setImage(\"\"); setRole(\"USER\"); setPreviewImg(\"\");\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const [previewImg, setPreviewImg] = useState('')\r\n    \r\n    const hanleUploadImage = (Event) => {\r\n        if (Event && Event.target && Event.target.files[0]){\r\n        setPreviewImg(URL.createObjectURL(Event.target.files[0]));\r\n        setImage(Event.target.files[0])\r\n    }\r\n        else{\r\n            \r\n        }\r\n    }\r\n    const validateEmail = (email) => {\r\n        return String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            );\r\n    };\r\n    const handleSubmitCreateUser = async () => { \r\n        //validate\r\n        const isValidEmail = validateEmail(email);\r\n        if (!isValidEmail){\r\n            toast.error(\"Email is invalid! Please try again!\")\r\n            return;\r\n        }\r\n        if (!password) {\r\n            toast.error(\"Password is invalid! Please try again!\")\r\n            return;\r\n        }\r\n        \r\n\r\n        let res = await postcreateNewUser(email, password, userName,role,image);\r\n        console.log('component response: ', res);\r\n        if (res && res.EC === 0){\r\n            toast.success(res.EM);\r\n            handleClose();\r\n            // await props.fetchListUser();\r\n            props.setCurrentPage(1);\r\n            await props.fetchListUserWithPaginate(1);\r\n        }\r\n        if(res && res.EC !== 0){\r\n            toast.error(res.EM);\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            {/* <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button> */}\r\n\r\n            <Modal show={show} onHide={handleClose} size='xl' backdrop=\"static\"\r\n            className='modal-add-user'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new user</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Email</label>\r\n                            <input type=\"email\" className=\"form-control\" value={email}\r\n                                onChange={(Event) => setEmail(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={password}\r\n                                onChange={(Event) => setPassword(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Username</label>\r\n                            <input value={userName}\r\n                            onChange={(Event) => setUsername(Event.target.value)}\r\n                            type=\"text\" className=\"form-control\" placeholder=\"Apartment, studio, or floor\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\"form-label\">Role</label>\r\n                            <select className=\"form-select\" value={role} onChange={(Event) => setRole(Event.target.value)}>\r\n                                <option selected value=\"USER\">USER</option>\r\n                                <option value=\"ADMIN\">ADMIN</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <label className=\"form-label label-upload\" htmlFor='labelUpload'>\r\n                                <HiOutlineViewGridAdd />Upload Image </label>\r\n                            <input type='file' hidden id='labelUpload'\r\n                            onChange={(Event) => hanleUploadImage(Event)}></input>\r\n                        </div>\r\n                        <div className='col-md-12 img-preview'>\r\n                            {previewImg ? <img src= {previewImg} />\r\n                                : <span>Preview Image</span> }\r\n                           \r\n                            \r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleSubmitCreateUser()}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalCreateUser","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ManageUser.js",["420"],[],"import ModalCreateUser from \"./ModalCreateUser\"\r\nimport './ManageUser.scss'\r\nimport {FcPlus} from 'react-icons/fc'\r\nimport TableUser from \"./TableUser\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { getAllUser, getUserWithPaginate } from \"../../../Services/apiService\";\r\nimport ModalUpdateUser from \"./ModalUpdateUser\"\r\nimport ModalViewUser from \"./ModalViewUser\"\r\nimport ModalDeleteUser from \"./ModalDeleteUser\"\r\nimport TableUserPaginate from \"./TableUserPaginate\"\r\nconst ManageUser = (props) => {\r\n    const LIMIT_USER = 4;\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [showModalCreateuser, setshowModalCreateuser] = useState(false);\r\n    const [showModalUpdateUser,setshowModalUpdateUser] = useState(false);\r\n    const [showViewUser, setShowViewUser] = useState(false);\r\n    const [showModalDelte,setShowModalDelete] = useState(false);\r\n    const [dataUpdate,setdataUpdate] = useState({})\r\n    const[dataView, setdataView] = useState({})\r\n    const [dataDelete, setdataDelete] = useState({})\r\n    const [listUsers, setListUsers] = useState([]);\r\n    useEffect(() => {\r\n        // fetchListUser();\r\n        fetchListUserWithPaginate(1);\r\n    }, []);\r\n    const fetchListUser = async () => {\r\n        let res = await getAllUser();\r\n        if (res.EC === 0) {\r\n            setListUsers(res.DT);\r\n        }\r\n    }\r\n    const fetchListUserWithPaginate = async (page) => {\r\n        let res = await getUserWithPaginate(page,LIMIT_USER);\r\n        if (res.EC === 0) {\r\n            setListUsers(res.DT.users);\r\n            setPageCount(res.DT.totalPages);\r\n        }\r\n    }\r\n    const handleClickUpdateUser = (user) => {\r\n        setshowModalUpdateUser(true);\r\n        setdataUpdate(user);\r\n    }\r\n    const handleViewUser = (user) => {\r\n        setShowViewUser(true);\r\n        setdataView(user);\r\n    }\r\n    const handleDeleteUser = (user) => {\r\n         setShowModalDelete(true);\r\n        setdataDelete(user)\r\n    }\r\n    const resetData = () => {\r\n        setdataUpdate({})\r\n    }\r\n    return (\r\n        <div className=\"manage-user-container\">\r\n            <div className=\"title\">\r\n                Manage User\r\n            </div>\r\n            <div className=\"uers-content\">\r\n                <div className=\"btn-add-new\">\r\n                    <button className=\"btn btn-primary\" onClick={() => setshowModalCreateuser(true)}><FcPlus />Add new user</button>\r\n                </div>\r\n                <div className=\"table-users-container\">\r\n                    <TableUserPaginate listUsers={listUsers}\r\n                    handleClickUpdateUser={handleClickUpdateUser}\r\n                    handleViewUser={handleViewUser}\r\n                    handleDeleteUser={handleDeleteUser}\r\n                    fetchListUserWithPaginate={fetchListUserWithPaginate}\r\n                    pageCount = {pageCount}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}/>\r\n                </div>\r\n                <ModalCreateUser show={showModalCreateuser} \r\n                setShow={setshowModalCreateuser}\r\n                fetchListUser = {fetchListUser}\r\n                fetchListUserWithPaginate={fetchListUserWithPaginate}\r\n                />\r\n                <ModalUpdateUser \r\n                    show={showModalUpdateUser}\r\n                    setShow={setshowModalUpdateUser}\r\n                    dataUpdate = {dataUpdate} \r\n                    fetchListUser={fetchListUser}\r\n                    resetData={resetData}\r\n                    fetchListUserWithPaginate={fetchListUserWithPaginate}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                />\r\n                <ModalViewUser \r\n                    show={showViewUser}\r\n                    dataView={dataView}\r\n                    setShow={setShowViewUser} \r\n                    resetData={resetData}/>\r\n                <ModalDeleteUser \r\n                    show={showModalDelte}\r\n                    setShow={setShowModalDelete}\r\n                    dataDelete={dataDelete}\r\n                    fetchListUser={fetchListUser}\r\n                    fetchListUserWithPaginate={fetchListUserWithPaginate}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                   />\r\n    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageUser","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Services\\apiService.js",["421"],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\utils\\axiosCustomize.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\TableUser.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalUpdateUser.js",["422","423","424"],[],"import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\r\nimport { toast } from \"react-toastify\";\r\nimport { Toast } from 'bootstrap';\r\nimport _ from 'lodash'\r\nimport { putUpdateUser } from '../../../Services/apiService'\r\nconst ModalUpdateUser = (props) => {\r\n    const { show, setShow, dataUpdate} = props\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUsername] = useState('');\r\n    const [image, setImage] = useState('')\r\n    const [role, setRole] = useState('USER');\r\n\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEmail(\"\"); setPassword(\"\"); setUsername(\"\"); setImage(\"\"); setRole(\"USER\"); setPreviewImg(\"\");\r\n        props.resetData();\r\n    }\r\n    useEffect(() => {\r\n        if (!_.isEmpty(dataUpdate)) {\r\n            setEmail(dataUpdate.email);\r\n            setUsername(dataUpdate.username);\r\n            setRole(dataUpdate.role);\r\n            if (dataUpdate.image) {\r\n                setPreviewImg(`data:image/jpeg;base64,${dataUpdate.image}`)\r\n            }\r\n        }\r\n    }, [props.dataUpdate])\r\n    const [previewImg, setPreviewImg] = useState('')\r\n\r\n    const hanleUploadImage = (Event) => {\r\n        if (Event && Event.target && Event.target.files[0]) {\r\n            setPreviewImg(URL.createObjectURL(Event.target.files[0]));\r\n            setImage(Event.target.files[0])\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    const handleSubmitCreateUser = async () => {\r\n        let res = await putUpdateUser(dataUpdate.id, userName, role, image);\r\n        if (res && res.EC === 0) {\r\n            toast.success(res.EM);\r\n            handleClose();\r\n            // await props.fetchListUser();\r\n            // props.setCurrentPage(1);\r\n            await props.fetchListUserWithPaginate(props.currentPage);\r\n        }\r\n        if (res && res.EC !== 0) {\r\n            toast.error(res.EM);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            {/* <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button> */}\r\n\r\n            <Modal show={show} onHide={handleClose} size='xl' backdrop=\"static\"\r\n                className='modal-add-user'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Update a user</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Email</label>\r\n                            <input type=\"email\" className=\"form-control\" value={email} disabled\r\n                                onChange={(Event) => setEmail(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={password} disabled\r\n                                onChange={(Event) => setPassword(Event.target.value)} />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Username</label>\r\n                            <input value={userName}\r\n                                onChange={(Event) => setUsername(Event.target.value)}\r\n                                type=\"text\" className=\"form-control\" placeholder=\"Apartment, studio, or floor\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\"form-label\">Role</label>\r\n                            <select className=\"form-select\" value={role} onChange={(Event) => setRole(Event.target.value)}>\r\n                                <option selected value=\"USER\">USER</option>\r\n                                <option value=\"ADMIN\">ADMIN</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <label className=\"form-label label-upload\" htmlFor='labelUpload'>\r\n                                <HiOutlineViewGridAdd />Upload Image </label>\r\n                            <input type='file' hidden id='labelUpload'\r\n                                onChange={(Event) => hanleUploadImage(Event)}></input>\r\n                        </div>\r\n                        <div className='col-md-12 img-preview'>\r\n                            {previewImg ? <img src={previewImg} />\r\n                                : <span>Preview Image</span>}\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleSubmitCreateUser()}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalUpdateUser","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalViewUser.js",["425","426","427","428"],[],"import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\r\nimport _ from 'lodash'\r\nconst ModalViewUser = (props) => {\r\n    const { show, setShow, dataView, resetData } = props\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [userName, setUsername] = useState('');\r\n    const [image, setImage] = useState('')\r\n    const [role, setRole] = useState('USER');\r\n    const [previewImg, setPreviewImg] = useState('')\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setEmail(\"\"); setPassword(\"\"); setUsername(\"\"); setImage(\"\"); setRole(\"USER\"); setPreviewImg(\"\");\r\n        props.resetData();\r\n    }\r\n    useEffect(() => {\r\n        if (!_.isEmpty(dataView)) {\r\n            setEmail(dataView.email);\r\n            setUsername(dataView.username);\r\n            setRole(dataView.role);\r\n            if (dataView.image) {\r\n                setPreviewImg(`data:image/jpeg;base64,${dataView.image}`)\r\n            }\r\n        }\r\n    }, [props.dataView])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} size='xl' backdrop=\"static\"\r\n                className='modal-add-user'>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>View a user</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className=\"row g-3\">\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Email</label>\r\n                            <input type=\"email\" className=\"form-control\" value={email} disabled/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Password</label>\r\n                            <input type=\"password\" className=\"form-control\" value={password} disabled/>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <label className=\"form-label\" >Username</label>\r\n                            <input value={userName} disabled\r\n                                type=\"text\" className=\"form-control\" placeholder=\"Apartment, studio, or floor\" />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\"form-label\">Role</label>\r\n                            <select className=\"form-select\" value={role}  disabled>\r\n                                <option selected value=\"USER\">USER</option>\r\n                                <option value=\"ADMIN\">ADMIN</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <label className=\"form-label label-upload\" htmlFor='labelUpload'>\r\n                                <HiOutlineViewGridAdd />Upload Image </label>\r\n                            <input type='file' hidden id='labelUpload' disabled\r\n                               ></input>\r\n                        </div>\r\n                        <div className='col-md-12 img-preview'>\r\n                            {previewImg ? <img src={previewImg} />\r\n                                : <span>Preview Image</span>}\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalViewUser","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\ModalDeleteUser.js",["429","430"],[],"import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { deleteUser } from '../../../Services/apiService';\r\nimport { toast } from \"react-toastify\";\r\nimport { Toast } from 'bootstrap';\r\nconst ModalDeleteUser = (props) => {\r\n    const { show, setShow, dataDelete } = props;\r\n    const handleClose = () => setShow(false);\r\n    const handleConfirmDele = async () => {\r\n        let res = await deleteUser(dataDelete.id);\r\n        if (res && res.EC === 0) {\r\n            toast.success(res.EM);\r\n            handleClose();\r\n            // await props.fetchListUser();\r\n            props.setCurrentPage(1);\r\n            await props.fetchListUserWithPaginate(1);\r\n        }\r\n        if (res && res.EC !== 0) {\r\n            toast.error(res.EM);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm delete a user ?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to delete this user, email: <b>{dataDelete && dataDelete.email ? dataDelete.email : \"\"}</b> ?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleConfirmDele()} >\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalDeleteUser","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\TableUserPaginate.js",["431","432"],[],"import ReactPaginate from 'react-paginate';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst TableUserPaginate = (props) => {\r\n    const { listUsers, pageCount } = props;\r\n    //const pageCount = Math.ceil(items.length / itemsPerPage);\r\n    const handlePageClick = (event) => {\r\n        props.fetchListUserWithPaginate(+event.selected+1);\r\n        props.setCurrentPage(event.selected+1);\r\n    };\r\n    return (\r\n        <>\r\n            <table className=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">username</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Role</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {listUsers && listUsers.length > 0 &&\r\n                        listUsers.map((item, index) => {\r\n                            return (\r\n                                <tr key={`table-users-${index}`}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.username}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>@{item.role}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-info\"\r\n                                            onClick={() => props.handleViewUser(item)}>View</button>\r\n                                        <button className=\"btn btn-warning mx-3\"\r\n                                            onClick={() => props.handleClickUpdateUser(item)}>Update</button>\r\n                                        <button className=\"btn btn-danger\"\r\n                                            onClick={() => props.handleDeleteUser(item)}>Delete</button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    {listUsers && listUsers.length === 0 &&\r\n                        <tr >\r\n                            <td colSpan={'4'}>Not found data</td>\r\n                        </tr>}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n            <div className='user-pagination d-flex justify-content-center'>\r\n            <ReactPaginate\r\n                nextLabel=\"Next >\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={3}\r\n                marginPagesDisplayed={2}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< Prev\"\r\n                pageClassName=\"page-item\"\r\n                pageLinkClassName=\"page-link\"\r\n                previousClassName=\"page-item\"\r\n                previousLinkClassName=\"page-link\"\r\n                nextClassName=\"page-item\"\r\n                nextLinkClassName=\"page-link\"\r\n                breakLabel=\"...\"\r\n                breakClassName=\"page-item\"\r\n                breakLinkClassName=\"page-link\"\r\n                containerClassName=\"pagination\"\r\n                activeClassName=\"active\"\r\n                renderOnZeroPageCount={null}\r\n                forcePage={props.currentPage-1}\r\n            />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableUserPaginate","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Auth\\Login.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Layout.js",["433"],[],"import React from 'react';\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport HomePage from './component/Home/HomePage';\r\nimport ManageUser from './component/Admin/Content/ManageUser';\r\nimport Dashboard from './component/Admin/Content/DashBoard';\r\nimport Login from './component/Auth/Login';\r\nimport Register from './component/Auth/Register'\r\nimport User from './component/User/User';\r\nimport Admin from './component/Admin/Admin';\r\nimport App from './App';\r\nimport { ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport ListQuiz from './component/User/ListQuiz';\r\nimport DetailQuiz from './component/User/DetailQuiz';\r\nimport ManageQuiz from './component/Admin/Content/Quiz/ManageQuiz';\r\nimport Questions from './component/Admin/Content/Question/Question';\r\nimport PrivateRoute from './Route/PrivateRoute';\r\nimport  {Suspense} from 'react';\r\nconst Notfound = () => {\r\n    return(\r\n        <div className='container mt-3 d-flex justify-content-center alert alert-danger '>404.Not found data with your current URL</div>\r\n    )\r\n}\r\nconst Layout = (props) => {\r\n    return (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n        <Routes>\r\n            <Route path=\"/\" element={<App />}>\r\n                <Route index element={<HomePage />} />\r\n                <Route path=\"users\" element={\r\n                <PrivateRoute>\r\n                    <ListQuiz />\r\n                </PrivateRoute>\r\n}/>\r\n            </Route>\r\n            <Route path=\"/quiz/:id\" element={<DetailQuiz />} />\r\n                <Route path=\"/admins\" element={\r\n                <PrivateRoute>\r\n                    <Admin />\r\n                </PrivateRoute>} >\r\n                <Route index element={<Dashboard />} />\r\n                <Route path=\"manage-users\" element={<ManageUser />} />\r\n                <Route path=\"manage-quizzes\" element={<ManageQuiz />} />\r\n                <Route path=\"manage-questions\" element={<Questions />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path = '/register' element={<Register/>} />\r\n            <Route path='/test' element={<PrivateRoute />} />\r\n            <Route path='*' element={<Notfound/>}/>\r\n        </Routes>\r\n            <ToastContainer\r\n                position=\"top-left\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            >\r\n            </ToastContainer>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Layout;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Auth\\Register.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\reducer\\userReducer.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\ListQuiz.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\DetailQuiz.js",["434","435","436"],[],"import { useEffect } from \"react\";\r\nimport { useParams,useLocation } from \"react-router-dom\"\r\nimport { getDataQuiz, postSubmitQuiz } from \"../../Services/apiService\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport './DetailQuiz.scss'\r\nimport Question from \"./Question\";\r\nimport { useState } from \"react\";\r\nimport ModalResult from \"./ModalResult\";\r\nimport RightContent from \"./QuizContent/RightContent\";\r\nconst DetailQuiz = (props) => {\r\n    const params = useParams();\r\n    const location = useLocation();\r\n    const quizId = params.id;\r\n    const [dataQuiz, setDataQuiz] = useState([])\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const [isShowModal,setIsShowModal] = useState(false)\r\n    const [dataModal,setDataModal] = useState({})\r\n    const fetchQuestion = async() => {\r\n        let res = await getDataQuiz(quizId)\r\n        if (res && res.EC === 0){\r\n            let raw = res.DT;\r\n            let data = _.chain(raw)\r\n                // Group the elements of Array based on `color` property\r\n                .groupBy(\"id\")\r\n                // `key` is group's name (color), `value` is the array of objects\r\n                .map((value, key) => {\r\n                    let answers = [];\r\n                    let questionDescription, image = null;\r\n                    value.forEach((item,index)=>{\r\n                        if (index === 0){\r\n                            questionDescription = item.description;\r\n                            image = item.image;\r\n                        }\r\n                        item.answers.isSelected = false;\r\n                        answers.push(item.answers);\r\n                    })\r\n                    answers = _.orderBy(answers, ['id'],['asc'])\r\n                    return { questionId: key, answers, questionDescription, image }\r\n        })\r\n                .value()\r\n            setDataQuiz(data);\r\n        }\r\n    }\r\n\r\n    const handlePrev=()=>{\r\n        if (index-1 < 0) return;\r\n        setIndex(index - 1)\r\n    }\r\n    const handleNext = () => {\r\n        if(dataQuiz && dataQuiz.length > index+1)\r\n          setIndex(index+1)\r\n    }\r\n    const handleFinish = async () => {\r\n        let payload = {quizId:+quizId,answers:[]};\r\n        let answers = [];\r\n        if (dataQuiz && dataQuiz.length > 0){\r\n            dataQuiz.forEach(item => {\r\n                \r\n                let questionId = item.questionId;\r\n                let userAnswerId = [];\r\n                item.answers.forEach(a => {\r\n                    if (a.isSelected){\r\n                        userAnswerId.push(a.id)\r\n                    }\r\n                })\r\n                answers.push({\r\n                    questionId: +questionId,\r\n                    userAnswerId: userAnswerId\r\n                })\r\n            })\r\n            payload.answers = answers;\r\n            //submit api\r\n            let res = await postSubmitQuiz(payload);\r\n            console.log(\"check res: \", res);\r\n            if (res && res.EC === 0){\r\n                setDataModal({\r\n                    countCorrect: res.DT.countCorrect,\r\n                    countTotal: res.DT.countTotal,\r\n                    quizData: res.DT.quizData\r\n                })\r\n                setIsShowModal(true);\r\n            }else{\r\n                alert(\"Something wrong ...\")\r\n            }\r\n        }\r\n\r\n    }\r\n    const handleCheckBox = (answerId, questionId) => {\r\n        let dataQuizClone = _.cloneDeep(dataQuiz);\r\n        console.log(\"dataquiz: \", dataQuizClone);\r\n        let question = dataQuizClone.find(item => +item.questionId === +questionId);\r\n        if(question && question.answers){\r\n           question.answers.map(item => {\r\n            if (+item.id === +answerId){\r\n                item.isSelected = !item.isSelected;\r\n            }\r\n            return item;\r\n           })\r\n        }\r\n        let index = dataQuizClone.findIndex(item => +item.questionId === +questionId)\r\n        if(index > -1){\r\n            dataQuizClone[index] = question;\r\n            setDataQuiz(dataQuizClone)\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        fetchQuestion();\r\n    },[quizId])\r\n    return (\r\n        <div className=\"detail-quiz-container\">\r\n           <div className=\"left-content\">\r\n                <div className=\"title\">\r\n                    Quiz {quizId}: {location?.state?.quizTitle}\r\n                </div>\r\n                <hr />\r\n                <div className=\"q-body\">\r\n                    <img />\r\n                </div>\r\n                <div className=\"q-content\">\r\n                    <Question index={index}\r\n                    handleCheckBox = {handleCheckBox}\r\n                    data={dataQuiz && dataQuiz.length >0 ? dataQuiz[index]: []}/>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <button className=\"btn btn-secondary ml-3\"\r\n                    onClick={()=>handlePrev()}>PREV</button>\r\n                    <button className=\"btn btn-primary \"\r\n                    onClick={()=>handleNext()}>NEXT</button>\r\n                    <button className=\"btn btn-warning \"\r\n                    onClick={() => handleFinish()}>FINISH</button>\r\n                </div>\r\n           </div>\r\n           <div className=\"right-content\">\r\n                <RightContent \r\n                setIndex = {setIndex}\r\n                handleFinish={handleFinish}\r\n                dataQuiz = {dataQuiz}/>\r\n           </div>\r\n           <ModalResult \r\n           show={isShowModal}\r\n           setShow = {setIsShowModal}\r\n            dataModal={dataModal }/>\r\n        </div>\r\n    )\r\n}\r\nexport default DetailQuiz","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\Question.js",["437"],[],"import _ from \"lodash\";\r\nimport { useState } from \"react\";\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nconst Question = (props) => {\r\n    const { data, index } = props;\r\n    const [isPreviewImage, setIsPreviewImage] = useState(false);\r\n    if (_.isEmpty(data)) {\r\n        return (<></>)\r\n    }\r\n    \r\n    const handleCheckedbox =(Event,aId, qId)=>{\r\n        props.handleCheckBox(aId, qId);\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n            data.image ? \r\n            <div className=\"q-image\">\r\n                <img src={`data: image/jpeg;base64,${data.image}`} onClick={() => setIsPreviewImage(true)} style={{cursor: 'pointer'}}/>\r\n                       {isPreviewImage === true &&\r\n                            <Lightbox image={`data: image/jpeg;base64,${data.image}`}\r\n                                title={\"Question Image\"}\r\n                                onClose={() => setIsPreviewImage(false)}>\r\n                            </Lightbox>}\r\n            </div>\r\n                : <div className=\"q-image\"></div>\r\n            }\r\n            <div className=\"question\">Question {index + 1}: {data.questionDescription} ?</div>\r\n            <div className=\"answer\">\r\n                {data.answers && data.answers.length > 0 &&\r\n                    data.answers.map((a, index) => {\r\n                        return (\r\n                            <div key={`answer-${index}`}\r\n                                className=\"A-child\">\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" \r\n                                    checked = {a.isSelected}\r\n                                        onChange={(Event) => handleCheckedbox(Event, a.id, data.questionId)}/>\r\n                                    <label className=\"form-check-label\" >\r\n                                        {a.description}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Question;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\ModalResult.js",["438"],[],"import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ModalResult = (props) => {\r\n    const { show, setShow, dataModal } = props;\r\n    const handleClose = () => setShow(false);\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Your Result...</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>Total Questions: <b>{dataModal.countTotal}</b></div>\r\n                    <div>Total Correct Answers: <b>{dataModal.countCorrect}</b></div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Show ansers\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={ handleClose} >\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalResult","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ManageQuiz.js",["439"],[],"import { useState, useEffect } from 'react'\r\nimport './ManageQuiz.scss'\r\nimport Select from 'react-select'\r\nimport { postCreateNewQuiz } from '../../../../Services/apiService'\r\nimport { toast } from \"react-toastify\";\r\nimport  Accordion  from 'react-bootstrap/Accordion';\r\nimport TableQuiz from './TableQuiz';\r\nimport QuizQA from './QuizQA';\r\nimport AssignQuiz from './AssignQuiz';\r\n\r\nconst options = [\r\n    {value: 'EASY', label:'EASY'},\r\n    { value: 'MEDIUM', label: 'MEDIUM' },\r\n    { value: 'HARD', label: 'HARD' },\r\n]\r\nconst ManageQuiz = (props) => {\r\n    \r\n    const [name,setName] = useState('');\r\n    const [description,setDescription] = useState('');\r\n    const [type,setType] = useState('EASY');\r\n    const [image,setImage] = useState(null);\r\n    \r\n    const handleSubmitQuiz = async () => {\r\n        let res = await postCreateNewQuiz(description, name, type?.value, image);\r\n        if (res && res.EC === 0){\r\n            toast.success(res.EM)\r\n            setName('');\r\n            setDescription('')\r\n            setImage(null)\r\n        }\r\n        else{\r\n            toast.error(res.EM)\r\n        }\r\n    }\r\n    const handleChangeFile = (Event) => {\r\n        if (Event && Event.target && Event.target.files[0]) {\r\n            setImage(Event.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Accordion.Item eventKey=\"0\">\r\n                    <Accordion.Header>\r\n                        Manage Quizzes\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <div className=\"add-new\">\r\n                            <fieldset className=\"border rounded-3 p-3\">\r\n                                <legend className=\"float-none w-auto px-3\">Add new quiz:</legend>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder='your quiz name'\r\n                                        value={name} onChange={(Event) => setName(Event.target.value)} />\r\n                                    <label for=\"floatingInput\">Name</label>\r\n                                </div>\r\n                                <div className=\"form-floating\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder='description'\r\n                                        value={description} onChange={(Event) => setDescription(Event.target.value)} />\r\n                                    <label for=\"floatingPassword\">Description</label>\r\n                                </div>\r\n                                <div className='my-3'>\r\n                                    <Select\r\n                                        value={type}\r\n                                        defaultValue={type}\r\n                                        onChange={setType}\r\n                                        options={options} />\r\n                                </div>\r\n                                <div className='more-actions form-group'>\r\n                                    <label className='mb-1'>Upload Image</label>\r\n                                    <input type='file' className='form-control'\r\n                                        onChange={(Event) => handleChangeFile(Event)}></input>\r\n                                </div>\r\n                                <div className='mt-3'>\r\n                                    <button className='btn btn-warning'\r\n                                        onClick={() => handleSubmitQuiz()}>Save</button>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        <div className=\"list-detail\">\r\n                            <TableQuiz/>\r\n                        </div>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n\r\n\r\n                <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>\r\n                        Update Q/A Quizzes\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <QuizQA />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                <Accordion.Item eventKey=\"2\">\r\n                    <Accordion.Header>\r\n                       Assign to Users\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <AssignQuiz />\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\nexport default ManageQuiz","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\TableQuiz.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ModalEditQuiz.js",["440","441","442","443"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Select from 'react-select'\r\nimport { editQuiz } from \"../../../../Services/apiService\";\r\nimport { HiOutlineViewGridAdd } from 'react-icons/hi';\r\nimport _ from 'lodash'\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ModalEditQuiz = (props) => {\r\n    const { show, setShow, dataEdit } = props;\r\n    const [name, setName] = useState(''); \r\n    const [description,setDescription] = useState('');\r\n    const [difficulty, setDifficulty] = useState('');\r\n    const [quizImage, setQuizImage] = useState('');\r\n    const [previewImg, setPreviewImg] = useState('')\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setName(''); setDifficulty(''); setQuizImage(''); setPreviewImg(\"\"); setDescription(\"\")\r\n        props.resetData();\r\n    }\r\n    const handleSaveEditQuiz = async () => {\r\n        let res = await editQuiz(dataEdit.id, description, name, difficulty, previewImg);\r\n        if (res && res.EC === 0) {\r\n            toast.success(res.EM);\r\n            handleClose();\r\n            await props.fetchQuiz();\r\n        }\r\n        if (res && res.EC !== 0) {\r\n            toast.error(res.EM);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!_.isEmpty(dataEdit)) {\r\n            setName(dataEdit.name);\r\n            setDifficulty(dataEdit.difficulty);\r\n            setDescription(dataEdit.description);\r\n            if (dataEdit.image) {\r\n                setPreviewImg(`data:image/jpeg;base64,${dataEdit.image}`)\r\n            }\r\n        }\r\n    }, [props.dataEdit])\r\n    const hanleUploadImage = (Event) => {\r\n        if (Event && Event.target && Event.target.files[0]) {\r\n            setPreviewImg(URL.createObjectURL(Event.target.files[0]));\r\n            setQuizImage(Event.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <Modal show={show} onHide={handleClose} size='xl' backdrop=\"static\"\r\n            className='modal-add-quiz'>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Edit Quiz</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form className=\"row g-3\">\r\n                 <div className=\"col-md-6\">\r\n                    <label className=\"form-label\" >Name:</label>\r\n                    <input type=\"text\" className=\"form-control\" value={name}\r\n                        onChange={(Event) => setName(Event.target.value)} />\r\n                 </div>\r\n                    <div className=\"col-md-6\">\r\n                    <label className=\"form-label\" >Description:</label>\r\n                    <input type=\"text\" className=\"form-control\" value={description}\r\n                            onChange={(Event) => setDescription(Event.target.value)} />\r\n                    </div>\r\n                        <div className='col-md-4'>\r\n                            <select className=\"form-select\" value={difficulty} \r\n                            onChange={(Event) => setDifficulty(Event.target.value)}>\r\n                                <option selected value=\"EASY\">EASY</option>\r\n                                <option value=\"MEDIUM\">MEDIUM</option>\r\n                                <option value=\"HARD\">HARD</option>\r\n                            </select>\r\n                    </div>\r\n                        <div className='col-md-12'>\r\n                            <label className=\"form-label label-upload\" htmlFor='labelUpload'>\r\n                                <HiOutlineViewGridAdd />Upload Image </label>\r\n                            <input type='file' hidden id='labelUpload'\r\n                                onChange={(Event) => hanleUploadImage(Event)}></input>\r\n                        </div>\r\n                        <div className='col-md-12 img-preview'>\r\n                            {previewImg ? <img src={previewImg} />\r\n                                : <span>Preview Image</span>}\r\n                        </div>\r\n                    </form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                    <Button onClick={() => handleClose()}>\r\n                    Close\r\n                </Button>\r\n                    <Button onClick={() => handleSaveEditQuiz()}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default ModalEditQuiz;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\ModalDeleteQuiz.js",["444"],[],"import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { deleteQuiz } from '../../../../Services/apiService';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ModalDeleteQuiz = (props) => {\r\n    const { show, setShow, dataDeleteQuiz } = props;\r\n    const handleClose = () => setShow(false);\r\n    const handleConfirmDele = async () => {\r\n        let res = await deleteQuiz(dataDeleteQuiz.id);\r\n        if (res && res.EC === 0) {\r\n            toast.success(res.EM);\r\n            handleClose();\r\n            await props.fetchQuiz()\r\n        }\r\n        if (res && res.EC !== 0) {\r\n            toast.error(res.EM);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} backdrop=\"static\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm delete a quiz ?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure to delete this quiz ?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => handleConfirmDele()} >\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModalDeleteQuiz","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Question\\Question.js",["445","446"],[],"import { useEffect, useState } from \"react\"\r\nimport Select from \"react-select\"\r\nimport './Question.scss'\r\nimport { TbHeartPlus } from \"react-icons/tb\"\r\nimport { BiCheckboxMinus } from \"react-icons/bi\"\r\nimport { IoIosAdd } from \"react-icons/io\"\r\nimport { AiFillMinusCircle } from \"react-icons/ai\"\r\nimport { RiImageAddFill } from \"react-icons/ri\"\r\nimport { v4 as uuidv4, validate } from 'uuid'\r\nimport { getAllQuizAdmin, postNewQuestionForQuiz, postAnswerForQuestion } from \"../../../../Services/apiService\";\r\nimport _ from \"lodash\"\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nimport { toast } from \"react-toastify\"\r\nconst Questions = (props) => {\r\n    const initSate = (\r\n        [\r\n        {\r\n            id: uuidv4(),\r\n            description: '',\r\n            image: '',\r\n            imageName: '',\r\n            answers: [\r\n                {\r\n                    id: uuidv4(),\r\n                    description: '',\r\n                    isCorrect: false\r\n                },\r\n            ]\r\n        },\r\n        ])\r\n    const [selectedQuiz, setSelectedQuiz] = useState({});\r\n    const [questions, setQuestions] = useState(initSate)\r\n    const [prewImage, setPrewImage] = useState(false);\r\n    const [listQuiz, setListQuiz] = useState([]);\r\n    const fetchQuiz = async () => {\r\n        let res = await getAllQuizAdmin();\r\n        if (res && res.EC === 0) {\r\n            let newQuiz = res.DT.map(item => {\r\n                return {\r\n                    value: item.id,\r\n                    label: `${item.id}-${item.description}`\r\n                }\r\n            })\r\n            setListQuiz(newQuiz);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        fetchQuiz();\r\n    }, [])\r\n    const [dataPreviewImage, setDataPreviewImage] = useState({\r\n        url: '',\r\n        title: ''\r\n    })\r\n    const handleSubmitQuestion = async () => {\r\n        //todo\r\n        if (_.isEmpty(selectedQuiz)){\r\n            toast.error(\"Please select quiz\");\r\n            return;\r\n        }\r\n        //validate question\r\n        let isValidQ = true; let indexQ;\r\n        for (let i = 0; i < questions.length; i++){\r\n            if (!questions[i].description){\r\n                isValidQ = false;\r\n                indexQ = i;\r\n                break;\r\n            }\r\n        }\r\n        if (isValidQ === false) {\r\n            toast.error(`Not empty description in question ${indexQ+1}`);\r\n            return;\r\n        }\r\n        //validate answer\r\n        let isValid = true; let indexAnswer; let indexQuestion;\r\n        for (let i = 0; i < questions.length; i++){\r\n            let checkedAnswer = false;\r\n            for (let j =0; j < questions[i].answers.length;j++){\r\n                if (!questions[i].answers[j].description){\r\n                    isValid = false;\r\n                    indexAnswer = j;\r\n                    break;\r\n                }\r\n                if (questions[i].answers[j].isCorrect === true) {\r\n                    checkedAnswer = true;\r\n                }\r\n            }\r\n            indexQuestion = i;\r\n            if (checkedAnswer === false) {\r\n                toast.error(\"Please fill checked box\");\r\n                return;\r\n            }\r\n            if (isValid === false) break;\r\n            }\r\n        if (isValid === false) {\r\n            toast.error(`Please fill answer${indexAnswer + 1} in question${indexQuestion + 1}`);\r\n            return;\r\n        }\r\n        \r\n            \r\n       for (const question of questions){\r\n            const q = await postNewQuestionForQuiz(+selectedQuiz.value, question.description, question.image);\r\n           for (const answer of question.answers){\r\n                 await postAnswerForQuestion(answer.description,answer.isCorrect,q.DT.id);\r\n            }\r\n        };\r\n        toast.success(\"Create success !\");\r\n        setQuestions(initSate);\r\n    }\r\n    const handleAddRemoveQuestions = (type, id) => {\r\n        if (type === 'ADD') {\r\n            const newQuestion = {\r\n                id: uuidv4(),\r\n                description: '',\r\n                image: '',\r\n                imageName: '',\r\n                answers: [\r\n                    {\r\n                        id: uuidv4(),\r\n                        description: '',\r\n                        isCorrect: false\r\n                    },\r\n\r\n                ]\r\n            }\r\n            setQuestions([...questions, newQuestion]);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            questionClone = questionClone.filter(item => item.id !== id)\r\n            setQuestions(questionClone);\r\n        }\r\n    }\r\n    const handleAddRemoveAnswer = (type, questionId, id) => {\r\n        let questionsClone = _.cloneDeep(questions);\r\n        if (type === 'ADD') {\r\n            const newAnswer =\r\n            {\r\n                id: uuidv4(),\r\n                description: '',\r\n                isCorrect: false\r\n            }\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers.push(newAnswer);\r\n            setQuestions(questionsClone);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers = questionsClone[index].answers.filter(item => item.id !== id)\r\n            setQuestions(questionsClone);\r\n        }\r\n    }\r\n    const handleOnChange = (type, questionId, value) => {\r\n        if (type === 'QUESTION') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            let index = questionClone.findIndex(item => item.id === questionId)\r\n            if (index > -1) {\r\n                questionClone[index].description = value;\r\n                setQuestions(questionClone);\r\n            }\r\n        }\r\n    }\r\n    const handleOnChangeFileQuestion = (questionId, Event) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1 && Event && Event.target && Event.target.files && Event.target.files[0]){\r\n            questionClone[index].image = Event.target.files[0];\r\n            questionClone[index].imageName = Event.target.files[0].name;\r\n            console.log('file image: ', questionClone[index]);\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnChangeAnswer = (type,questionId, answerId, value) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1) {\r\n            questionClone[index].answers = questionClone[index].answers.map((answer, index)=>{\r\n                if (answer.id === answerId){\r\n                    if (type==='CHECKED'){\r\n                        answer.isCorrect = value;\r\n                    }\r\n                    if (type === 'INPUT'){\r\n                        answer.description = value;\r\n                    }\r\n                }\r\n                return answer;\r\n            })\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnClickImage = (questionId) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > -1) {\r\n           setDataPreviewImage({\r\n               url: URL.createObjectURL(questionClone[index].image),\r\n               title: questionClone[index].imageName\r\n           })\r\n            setPrewImage(true);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"question-container\">\r\n            <div className=\"title\">\r\n                Mange Questions\r\n            </div>\r\n            <hr />\r\n            <div className=\"add-new-question\">\r\n                <div className=\"col-6 form-group\">\r\n                    <label className=\"mb-2\">Select Quiz:</label>\r\n                    <Select\r\n                        value={selectedQuiz}\r\n                        defaultValue={selectedQuiz}\r\n                        onChange={setSelectedQuiz}\r\n                        options={listQuiz}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-3 mb-2\">Add questions:</div>\r\n                {\r\n                    questions && questions.length > 0 && questions.map((question, index) => {\r\n                        return (\r\n                            <div key = {question.id } className=\"q-main mb-5\">\r\n                                <div className=\"question-content\">\r\n                                    <div className=\"form-floating description\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"name@example.com\"\r\n                                            value={question.description}\r\n                                            onChange={(event) => handleOnChange('QUESTION', question.id, event.target.value)} />\r\n                                        <label>Question {index + 1} description</label>\r\n                                    </div>\r\n                                    <div className=\"group-upload\">\r\n                                        <label className=\"label-upload\" htmlFor={`${question.id}`}><RiImageAddFill  /></label>\r\n                                        <input type={'file'} hidden id = {`${question.id}`} \r\n                                        onChange={(Event) => handleOnChangeFileQuestion(question.id, Event)}></input>\r\n                                        <span>{question.imageName ? \r\n                                        <span style={{cursor:'pointer'}} onClick={()=> handleOnClickImage(question.id)}>{question.imageName}</span> : \r\n                                        'No file uploaded'}</span>\r\n                                    </div>\r\n                                    <div className=\"btn-add\">\r\n\r\n                                        <span onClick={() => handleAddRemoveQuestions('ADD', '')}>\r\n                                            <IoIosAdd className=\"icon-add\" /></span>\r\n                                        {questions.length > 1 &&\r\n                                            <span onClick={() => handleAddRemoveQuestions('REMOVE', question.id)}>\r\n                                                <AiFillMinusCircle className=\"icon-remove\" /></span>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    question.answers && question.answers.length > 0\r\n                                    && question.answers.map((answer, index) => {\r\n                                        return (\r\n                                            <div className=\"answers-content\" key={answer.id}>\r\n                                                <input className=\"form-check-input iscorrected\" type=\"checkbox\" \r\n                                                checked={answer.isCorrect}\r\n                                                onChange={(Event) => handleOnChangeAnswer('CHECKED', question.id, answer.id,Event.target.checked)}/>\r\n                                                <div className=\"form-floating col-6 description\">\r\n                                                    <input type=\"type\" className=\"form-control answer-name\" \r\n                                                        placeholder=\"answer 1\" value={answer.description} \r\n                                                        onChange={(Event) => handleOnChangeAnswer('INPUT',question.id,answer.id,Event.target.value)}/>\r\n                                                    <label>Answer {index + 1}</label>\r\n                                                </div>\r\n                                                <div className=\"btn-group\">\r\n                                                    <span onClick={() => handleAddRemoveAnswer('ADD', question.id)}>\r\n                                                        <IoIosAdd className=\"icon-add\" />\r\n                                                    </span>\r\n                                                    {question.answers.length > 1 &&\r\n                                                        <span\r\n                                                            onClick={() => handleAddRemoveAnswer('REMOVE', question.id, answer.id)}>\r\n                                                            <BiCheckboxMinus className=\"icon-remove\" />\r\n                                                        </span>\r\n                                                    }\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                               \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    questions && questions.length > 0 && \r\n                    <button className=\"btn btn-primary\"\r\n                    onClick={()=>handleSubmitQuestion()}> Save questions</button>\r\n                }\r\n            </div>\r\n            {prewImage === true &&\r\n                <Lightbox image={dataPreviewImage.url}\r\n                    title={dataPreviewImage.title}\r\n                    onClose={() => setPrewImage(false)}>\r\n                </Lightbox>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Questions","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\QuizQA.js",["447","448","449","450"],[],"import { useEffect, useState } from \"react\"\r\nimport Select from \"react-select\"\r\nimport './QuizQA.scss'\r\nimport { BiCheckboxMinus } from \"react-icons/bi\"\r\nimport { IoIosAdd } from \"react-icons/io\"\r\nimport { AiFillMinusCircle } from \"react-icons/ai\"\r\nimport { RiImageAddFill } from \"react-icons/ri\"\r\nimport { v4 as uuidv4} from 'uuid'\r\nimport { getAllQuizAdmin, postNewQuestionForQuiz, postAnswerForQuestion, getQuizWithQa, postUpsertQA } from \"../../../../Services/apiService\";\r\nimport _ from \"lodash\"\r\nimport Lightbox from \"react-awesome-lightbox\";\r\nimport { toast } from \"react-toastify\"\r\nconst QuizQA = (props) => {\r\n    const initSate = (\r\n        [\r\n        {\r\n            id: uuidv4(),\r\n            description: '',\r\n            imageFile: '',\r\n            imageName: '',\r\n            answers: [\r\n                {\r\n                    id: uuidv4(),\r\n                    description: '',\r\n                    isCorrect: false\r\n                },\r\n            ]\r\n        },\r\n        ])\r\n    const [selectedQuiz, setSelectedQuiz] = useState({});\r\n    const [questions, setQuestions] = useState(initSate)\r\n    const [prewImage, setPrewImage] = useState(false);\r\n    const [listQuiz, setListQuiz] = useState([]);\r\n    const fetchQuiz = async () => {\r\n        let res = await getAllQuizAdmin();\r\n        if (res && res.EC === 0) {\r\n            let newQuiz = res.DT.map(item => {\r\n                return {\r\n                    value: item.id,\r\n                    label: `${item.id}-${item.description}`\r\n                }\r\n            })\r\n            setListQuiz(newQuiz);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        fetchQuiz();\r\n    }, [])\r\n    const [dataPreviewImage, setDataPreviewImage] = useState({\r\n        url: '',\r\n        title: ''\r\n    })\r\n    const handleSubmitQuestion = async () => {\r\n        //todo\r\n        if (_.isEmpty(selectedQuiz)){\r\n            toast.error(\"Please select quiz\");\r\n            return;\r\n        }\r\n        //validate question\r\n        let isValidQ = true; let indexQ;\r\n        for (let i = 0; i < questions.length; i++){\r\n            if (!questions[i].description){\r\n                isValidQ = false;\r\n                indexQ = i;\r\n                break;\r\n            }\r\n        }\r\n        if (isValidQ === false) {\r\n            toast.error(`Not empty description in question ${indexQ+1}`);\r\n            return;\r\n        }\r\n        //validate answer\r\n        let isValid = true; let indexAnswer; let indexQuestion;\r\n        // for (let i = 0; i < questions.length; i++){\r\n        //     let checkedAnswer = false;\r\n        //     for (let j =0; j < questions[i].answers.length;j++){\r\n        //         if (!questions[i].answers[j].description){\r\n        //             isValid = false;\r\n        //             indexAnswer = j;\r\n        //             break;\r\n        //         }\r\n               \r\n        //         if (questions[i].answers[j].isCorrect === true){\r\n        //             checkedAnswer = true;\r\n        //         }\r\n        //     }\r\n        //     indexQuestion = i;\r\n        //     if (checkedAnswer === false) {\r\n        //         toast.error(\"Please fill checked box\");\r\n        //         return;\r\n        //     }\r\n        //     if (isValid === false) break;\r\n        // }\r\n        let questionsClone = _.cloneDeep(questions);\r\n        for (let i = 0; i < questionsClone.length; i++){\r\n            if (questionsClone[i].imageFile){\r\n                questions[i].imageFile =  toBase64(questionsClone[i].imageFile);\r\n            }\r\n        }\r\n        let res = await postUpsertQA({\r\n            quizId: selectedQuiz.value,\r\n            questions: questionsClone\r\n        });\r\n        if (res && res.EC === 0){\r\n            toast.success(res.EM);\r\n            fetchQuizWithQA();\r\n        }\r\n        const toBase64 = file => new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = reject;\r\n        });\r\n        if (isValid === false) {\r\n            toast.error(`Please fill answer${indexAnswer + 1} in question${indexQuestion + 1}`);\r\n            return;\r\n        }\r\n        toast.success(\"Create success !\");\r\n        setQuestions(initSate);\r\n    }\r\n    const handleAddRemoveQuestions = (type, id) => {\r\n        if (type === 'ADD') {\r\n            const newQuestion = {\r\n                id: uuidv4(),\r\n                description: '',\r\n                imageFile: '',\r\n                imageName: '',\r\n                answers: [\r\n                    {\r\n                        id: uuidv4(),\r\n                        description: '',\r\n                        isCorrect: false\r\n                    },\r\n\r\n                ]\r\n            }\r\n            setQuestions([...questions, newQuestion]);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            questionClone = questionClone.filter(item => item.id !== id)\r\n            setQuestions(questionClone);\r\n        }\r\n    }\r\n    const handleAddRemoveAnswer = (type, questionId, id) => {\r\n        let questionsClone = _.cloneDeep(questions);\r\n        if (type === 'ADD') {\r\n            const newAnswer =\r\n            {\r\n                id: uuidv4(),\r\n                description: '',\r\n                isCorrect: false\r\n            }\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers.push(newAnswer);\r\n            setQuestions(questionsClone);\r\n        }\r\n\r\n        if (type === 'REMOVE') {\r\n            let index = questionsClone.findIndex(item => item.id === questionId);\r\n            questionsClone[index].answers = questionsClone[index].answers.filter(item => item.id !== id)\r\n            setQuestions(questionsClone);\r\n        }\r\n    }\r\n    const handleOnChange = (type, questionId, value) => {\r\n        if (type === 'QUESTION') {\r\n            let questionClone = _.cloneDeep(questions);\r\n            let index = questionClone.findIndex(item => item.id === questionId)\r\n            if (index > -1) {\r\n                questionClone[index].description = value;\r\n                setQuestions(questionClone);\r\n            }\r\n        }\r\n    }\r\n    const handleOnChangeFileQuestion = (questionId, Event) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1 && Event && Event.target && Event.target.files && Event.target.files[0]){\r\n            questionClone[index].imageFile = Event.target.files[0];\r\n            questionClone[index].imageName = Event.target.files[0].name;\r\n            //.log('file image: ', questionClone[index]);\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnChangeAnswer = (type,questionId, answerId, value) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > - 1) {\r\n            questionClone[index].answers = questionClone[index].answers.map((answer, index)=>{\r\n                if (answer.id === answerId){\r\n                    if (type==='CHECKED'){\r\n                        answer.isCorrect = value;\r\n                    }\r\n                    if (type === 'INPUT'){\r\n                        answer.description = value;\r\n                    }\r\n                }\r\n                return answer;\r\n            })\r\n            setQuestions(questionClone);\r\n\r\n        }\r\n    }\r\n    const handleOnClickImage = (questionId) => {\r\n        let questionClone = _.cloneDeep(questions);\r\n        let index = questionClone.findIndex(item => item.id === questionId);\r\n        if (index > -1) {\r\n           setDataPreviewImage({\r\n               url: URL.createObjectURL(questionClone[index].imageFile),\r\n               title: questionClone[index].imageName\r\n           })\r\n            setPrewImage(true);\r\n        }\r\n    }\r\n    const urltoFile = async (url, filename, mimeType) => {\r\n        if (url.startsWith('data:')) {\r\n            var arr = url.split(','),\r\n                mime = arr[0].match(/:(.*?);/)[1],\r\n                bstr = atob(arr[arr.length - 1]),\r\n                n = bstr.length,\r\n                u8arr = new Uint8Array(n);\r\n            while (n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n            }\r\n            var file = new File([u8arr], filename, { type: mime || mimeType });\r\n            return Promise.resolve(file);\r\n        }\r\n        return fetch(url)\r\n            .then(res => res.arrayBuffer())\r\n            .then(buf => new File([buf], filename, { type: mimeType }));\r\n    }\r\n    const fetchQuizWithQA = async () => {\r\n        let res = await getQuizWithQa(selectedQuiz.value);\r\n        if (res && res.EC === 0){\r\n\r\n            let newQA = [];\r\n            for (let i = 0; i < res.DT.qa.length; i++){\r\n                let q = res.DT.qa[i];\r\n                if (q.imageFile){\r\n                    q.imageName = `Question-${q.id}.png`\r\n                    q.imageFile = await urltoFile(`data:image/png;base64,${q.imageFile}`,`Question-${q.id}`,'image/png')\r\n                }\r\n                newQA.push(q);\r\n            }\r\n            setQuestions(newQA);\r\n           \r\n        }\r\n       \r\n    }\r\n    useEffect(() => {\r\n        if (selectedQuiz && selectedQuiz.value){\r\n            fetchQuizWithQA();\r\n        }\r\n       \r\n    }, [selectedQuiz])\r\n    return (\r\n        <div className=\"question-container\">\r\n            <div className=\"add-new-question\">\r\n                <div className=\"col-6 form-group\">\r\n                    <label className=\"mb-2\">Select Quiz:</label>\r\n                    <Select\r\n                        value={selectedQuiz}\r\n                        defaultValue={selectedQuiz}\r\n                        onChange={setSelectedQuiz}\r\n                        options={listQuiz}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-3 mb-2\">Add questions:</div>\r\n                {\r\n                    questions && questions.length > 0 && questions.map((question, index) => {\r\n                        return (\r\n                            <div key = {question.id } className=\"q-main mb-5\">\r\n                                <div className=\"question-content\">\r\n                                    <div className=\"form-floating description\">\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"name@example.com\"\r\n                                            value={question.description}\r\n                                            onChange={(event) => handleOnChange('QUESTION', question.id, event.target.value)} />\r\n                                        <label>Question {index + 1} description</label>\r\n                                    </div>\r\n                                    <div className=\"group-upload\">\r\n                                        <label className=\"label-upload\" htmlFor={`${question.id}`}><RiImageAddFill  /></label>\r\n                                        <input type={'file'} hidden id = {`${question.id}`} \r\n                                        onChange={(Event) => handleOnChangeFileQuestion(question.id, Event)}></input>\r\n                                        <span>{question.imageName ? \r\n                                        <span style={{cursor:'pointer'}} onClick={()=> handleOnClickImage(question.id)}>{question.imageName}</span> : \r\n                                        'No file uploaded'}</span>\r\n                                    </div>\r\n                                    <div className=\"btn-add\">\r\n\r\n                                        <span onClick={() => handleAddRemoveQuestions('ADD', '')}>\r\n                                            <IoIosAdd className=\"icon-add\" /></span>\r\n                                        {questions.length > 1 &&\r\n                                            <span onClick={() => handleAddRemoveQuestions('REMOVE', question.id)}>\r\n                                                <AiFillMinusCircle className=\"icon-remove\" /></span>\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    question.answers && question.answers.length > 0\r\n                                    && question.answers.map((answer, index) => {\r\n                                        return (\r\n                                            <div className=\"answers-content\" key={answer.id}>\r\n                                                <input className=\"form-check-input iscorrected\" type=\"checkbox\" \r\n                                                checked={answer.isCorrect}\r\n                                                onChange={(Event) => handleOnChangeAnswer('CHECKED', question.id, answer.id,Event.target.checked)}/>\r\n                                                <div className=\"form-floating col-6 description\">\r\n                                                    <input type=\"type\" className=\"form-control answer-name\" \r\n                                                        placeholder=\"answer 1\" value={answer.description} \r\n                                                        onChange={(Event) => handleOnChangeAnswer('INPUT',question.id,answer.id,Event.target.value)}/>\r\n                                                    <label>Answer {index + 1}</label>\r\n                                                </div>\r\n                                                <div className=\"btn-group\">\r\n                                                    <span onClick={() => handleAddRemoveAnswer('ADD', question.id)}>\r\n                                                        <IoIosAdd className=\"icon-add\" />\r\n                                                    </span>\r\n                                                    {question.answers.length > 1 &&\r\n                                                        <span\r\n                                                            onClick={() => handleAddRemoveAnswer('REMOVE', question.id, answer.id)}>\r\n                                                            <BiCheckboxMinus className=\"icon-remove\" />\r\n                                                        </span>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                               \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    questions && questions.length > 0 && \r\n                    <button className=\"btn btn-primary\"\r\n                    onClick={()=>handleSubmitQuestion()}> Save questions</button>\r\n                }\r\n            </div>\r\n            {prewImage === true &&\r\n                <Lightbox image={dataPreviewImage.url}\r\n                    title={dataPreviewImage.title}\r\n                    onClose={() => setPrewImage(false)}>\r\n                </Lightbox>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default QuizQA","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Admin\\Content\\Quiz\\AssignQuiz.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\QuizContent\\RightContent.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\User\\QuizContent\\CountDown.js",["451"],[],"import { useState, useEffect } from \"react\";\r\n\r\nconst CountDown = (props) => {\r\n    const [duration, setDuration] = useState(300); \r\n    const toHHMMSS = (secs) => {\r\n        const sec_num = parseInt(secs, 10)\r\n        const hours = Math.floor(sec_num / 3600)\r\n        const minutes = Math.floor(sec_num / 60) % 60\r\n        const seconds = sec_num % 60\r\n\r\n        return [hours, minutes, seconds]\r\n            .map(v => v < 10 ? \"0\" + v : v)\r\n            .filter((v, i) => v !== \"00\" || i > 0)\r\n            .join(\":\")\r\n    }\r\n    useEffect(()=>{\r\n        if (duration === 0) \r\n        {\r\n            props.onTimeUp();\r\n            return;\r\n        }\r\n        const timer = setInterval(()=>{\r\n            setDuration(duration - 1)\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(timer);\r\n        }\r\n    },[duration])\r\n    return (\r\n        <div className=\"countdown-container\">\r\n            {toHHMMSS(duration)}\r\n        </div>\r\n    )\r\n}\r\nexport default CountDown;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\Route\\PrivateRoute.js",["452"],[],"import { useSelector } from 'react-redux'\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\nconst PrivateRoute = (props) => {\r\n    const isAuthenticated = useSelector(state => state.user.isAuthenticated);\r\n    const navigate = useNavigate();\r\n    if (!isAuthenticated){\r\n        return (\r\n            <Navigate to=\"/login\"></Navigate>\r\n        )\r\n    }\r\n    return ( \r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\nexport default PrivateRoute;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\redux\\action\\userAction.js",[],[],"D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\component\\Header\\Language.js",["453","454"],[],"import NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\n\r\nconst Language = () => {\r\n    const { t, i18n } = useTranslation();\r\n    const handleChangeLanguage = (language) => {\r\n        i18n.changeLanguage(language)\r\n    }\r\n    return (\r\n        <>\r\n            <NavDropdown title={i18n.language === 'vi'?'Viet Nam' : 'English'} id=\"basic-nav-dropdown2\" className='languages'>\r\n                <NavDropdown.Item onClick={() => handleChangeLanguage('en')}>English</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => handleChangeLanguage('vi')}>Viet Nam</NavDropdown.Item>\r\n            </NavDropdown>\r\n        </>\r\n    )\r\n}\r\nexport default Language;","D:\\Fullstack\\Reactjs\\Basic\\base-react-redux\\src\\utils\\i18n.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\index.js",[],[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\reportWebVitals.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\Layout.js",["455","456","457","458","459"],[],"import React from 'react';\r\nimport { Route, Routes,Navigate } from \"react-router-dom\";\r\nimport App from './App';\r\nimport SecondPage from './component/SecondPage';\r\nimport NationCard from './component/FormNationCard';\r\nimport ThirdPage from './component/ThirdPage';\r\nimport FourPage from './component/FourPage';\r\nimport FifthPage from './component/FifthPage';\r\nimport SixPage from './component/SixPage';\r\nimport SevenPage from './component/SevenPage';\r\nimport DetailStudy from './component/DetailStudies';\r\nimport EightPage_New from './component/EightPage_New';\r\nimport NinePage from './component/NinePage';\r\nimport TenthPage from './component/TenthPage';\r\nimport EleventhPage from './component/EleventhPage';\r\nimport TwelvethPage from './component/TwelvethPage';\r\nimport ThreeteenthPage from './component/ThreeTeenthPage';\r\nimport Header from './component/Header';\r\nimport FirstPage from './component/FirstPage';\r\nimport FourteenPage from './component/FourteenPage';\r\nimport SubmitPage from './component/SubmitPage';\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst Notfound = () => {\r\n    return (\r\n        <div className='container mt-3 d-flex justify-content-center alert alert-danger '>404.Not found data with your current URL</div>\r\n    )\r\n}\r\nconst Layout = () => {\r\n    return(\r\n        <Routes>\r\n            <Route path=\"/demo\" element={<App />}></Route>\r\n            <Route path=\"/firstpage\" element={<FirstPage />}></Route>\r\n            <Route path=\"/secondpage\" element={<SecondPage />}></Route>\r\n            <Route path=\"/national-identity-card\" element={<NationCard />}></Route>\r\n            <Route path=\"/thirdpage\" element={<ThirdPage />}></Route>\r\n            <Route path=\"/fourthpage\" element={<FourPage />}></Route>\r\n            <Route path=\"/fifthpage\" element={<FifthPage />}></Route>\r\n            <Route path=\"/sixthpage\" element={<SixPage />}></Route>\r\n            <Route path=\"/sevenpage\" element={<SevenPage />}></Route>\r\n            <Route path=\"/detail-studies\" element={<DetailStudy />}></Route>\r\n            <Route path=\"/eightpage\" element={<EightPage_New />}></Route>\r\n            <Route path=\"/ninethpage\" element={<NinePage />}></Route>\r\n            <Route path=\"/tenthpage\" element={<TenthPage />}></Route>\r\n            <Route path=\"/eleventhpage\" element={<EleventhPage />}></Route>\r\n            <Route path=\"/twelvethpage\" element={<TwelvethPage />}></Route>\r\n            <Route path=\"/threeteenthpage\" element={<ThreeteenthPage />}></Route>\r\n            <Route path=\"/fourteenpage\" element={<FourteenPage />}></Route>\r\n            <Route path=\"/submitpage\" element={<SubmitPage />}></Route>\r\n            <Route\r\n                path=\"/\"\r\n                element={<Navigate to=\"/demo/\" replace />}\r\n            />\r\n        </Routes>\r\n    )\r\n}\r\n\r\nexport default Layout;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\App.js",["460","461"],[],"import Header from \"./component/Header\";\r\nimport './App.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport FirstPage from \"./component/FirstPage\";\r\nimport Notice from \"./component/Notice\";\r\nconst App = (props) => {\r\n    const navigate = useNavigate();\r\n    return (\r\n            <div className=\"app-container\">\r\n                <div className=\"header-container\">\r\n                    <Header />\r\n                </div>\r\n                <Notice />\r\n            \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\utils\\i18n.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\Header.js",["462"],[],"import logo from \"../../src/assets/images/logo.png\"\r\nimport './Header.scss'\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"header-content\">\r\n                <div className=\"title1\">\r\n                    OFFICIAL: Sensitive\r\n                    Personal Privacy\r\n                </div>\r\n                <div className=\"title2\">\r\n                    <img src={logo} className=\"image\"></img>\r\n                    <h1 id=\"_1b\" className=\"wc-heading\">Online Lodgement</h1>\r\n                </div>\r\n                <div className=\"title3\">Application for a Work and Holiday visa</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\store.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FirstPage.js",["463","464","465"],[],"import { useEffect, useMemo, useState } from \"react\"\r\nimport { Form } from \"react-bootstrap\"\r\nimport Select from 'react-select'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport countryList from 'react-select-country-list'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './FirstPage.scss'\r\nimport Header from \"./Header\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst FirstPage = (props) => {\r\n    \r\n    const navigate = useNavigate();\r\n    const options = [\r\n        { value: 'Permanent Resident', label: 'Permanent Resident' },\r\n        { value: 'Citizen', label: 'Citizen' },\r\n        { value: 'Visitor', label: 'Visitor' },\r\n        { value: 'Work Visa', label: 'Work Visa' },\r\n        { value: 'No Legal Status', label: 'No Legal Status' },\r\n        { value: 'Other', label: 'Other' },\r\n        { value: 'Student', label: 'Student' }\r\n    ]\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const optionsCountry = useMemo(() => countryList().getData(), [])\r\n    \r\n\r\n\r\n    const data = {\r\n        currentLocation: \"\",\r\n        LegalStatus: \"\",\r\n        date: startDate,\r\n        Q1:{\r\n            Yes : false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        \r\n        Q4: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q5: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        QM: {\r\n            Ans1: false,\r\n            Ans2: false,\r\n            Ans3: false\r\n        }\r\n    }\r\n    const [SaveDataPageOne, setSaveDataPageOne] = useState(data)\r\n\r\n    const handleOnChange = (Flag,Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageOne);\r\n        \r\n        if (Flag === \"Yes\"){\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        }else if (Flag === \"No\"){   \r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        if (Question === \"QM\"){\r\n            CloneState.QM.Ans1 = false;\r\n            CloneState.QM.Ans2 = false;\r\n            CloneState.QM.Ans3 = false;\r\n            CloneState[Question][Flag] = true;\r\n        }\r\n        setSaveDataPageOne(CloneState)\r\n    }\r\n\r\n    const ChangeNation = (value,Id) => {\r\n       \r\n        let CloneState = _.cloneDeep(SaveDataPageOne);\r\n        CloneState[Id] = value;\r\n        setSaveDataPageOne(CloneState)    \r\n    }\r\n\r\n    const handleSetStartDate = (value) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageOne);\r\n       \r\n        CloneState.date = new Date(value);\r\n        setSaveDataPageOne(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageOne');\r\n    \r\n        if (items){\r\n            setSaveDataPageOne(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageOne', JSON.stringify(SaveDataPageOne))\r\n    }, [SaveDataPageOne])\r\n    \r\n    return (\r\n        <>\r\n        <Header/>\r\n        \r\n            <div className=\"first-content\">\r\n                <div className=\"left\" >\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>2/15</div>\r\n                    <div className=\"Current-location\" style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Application context</div>\r\n                    <div className=\"Current-location\">Current location</div>\r\n                    <div className=\"Current-location\">Give details of the applicant's current location.</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Current location:</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageOne.currentLocation}\r\n                            //selected={SaveDataPageOne.currentLocation}\r\n                            //defaultValue={SaveDataPageOne.currentLocation}\r\n                            onChange={(Event) => ChangeNation(Event,\"currentLocation\")}/>\r\n                            \r\n                    </div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Legal status:</span>\r\n                        <Select options={options} className=\"select\" \r\n                            value={SaveDataPageOne.LegalStatus}\r\n                        onChange={(Event) => ChangeNation(Event, \"LegalStatus\")}/>\r\n                    </div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Current application</div>\r\n                    <div className='Current-location'>\r\n                        <span>Will the applicant be accompanied by dependent children at any time during their stay in Australia on this visa?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={()=>handleOnChange(\"Yes\",\"Q1\")}  checked={SaveDataPageOne.Q1.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\",\"Q1\")}\r\n                                    checked={SaveDataPageOne.Q1.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <span>\r\n                            Has the applicant been granted and entered Australia on a Working Holiday visa (subclass 417) before?\r\n                        </span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageOne.Q2.Yes}/>\r\n                                <label class=\"form-check-label\" >\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageOne.Q2.No}/>\r\n                                <label class=\"form-check-label\" >\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Application Type</div>\r\n                    <div className=\"Current-location\">Select the type of work and holiday visa the applicant is applying for:</div>\r\n                    <div className=\"check-radio-answer\" style={{ paddingLeft: \"20em\" }}>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefaultType\" id=\"ans1\"\r\n                                checked={SaveDataPageOne.QM.Ans1}\r\n                                onChange={() => handleOnChange(\"Ans1\",\"QM\")} \r\n                                />\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                First Work and Holiday visa (subclass 462)\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefaultType\" \r\n                                onChange={() => handleOnChange(\"Ans2\", \"QM\")} \r\n                                checked={SaveDataPageOne.QM.Ans2}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Second Work and Holiday visa (subclass 462)\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefaultTypeAns3\" \r\n                                onChange={() => handleOnChange(\"Ans3\",\"QM\")} \r\n                                checked={SaveDataPageOne.QM.Ans3}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Third Work and Holiday visa (subclass 462)\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has the applicant been granted and entered Australia on a first Work and Holiday visa (subclass 462) before?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div class=\"form-check-label\" >\r\n                                <div className=\"check-radio\"></div>\r\n                                <div className=\"check-radio-answer\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q4\")} checked={SaveDataPageOne.Q4.Yes}/>\r\n                                    <label class=\"form-check-label\" >\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q4\")} checked={SaveDataPageOne.Q4.No}/>\r\n                                    <label class=\"form-check-label\">\r\n                                        No\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"Current-location\" style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Proposed arrival date</div>\r\n                    <div className=\"DatePicker\" style={{display:\"flex\"}}>\r\n                        <div style={{paddingRight: \"16em\", paddingLeft: \"10px\"}}>Proposed arrival date</div>\r\n                        <div className=\"child-date\" ><DatePicker \r\n                            selected={Date.parse(SaveDataPageOne.date)} onChange={(date) => handleSetStartDate(date)} />  </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className='Current-location' style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Government support</div>\r\n                    <div className='Current-location'>\r\n                        <span>Does the applicant have a letter of government support to attach to this visa application?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div class=\"form-check-label\" >\r\n                                <div className=\"check-radio\"></div>\r\n                                <div className=\"check-radio-answer\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" \r\n                                        onChange={() => handleOnChange(\"Yes\", \"Q5\")} checked={SaveDataPageOne.Q5.Yes}/>\r\n                                    <label class=\"form-check-label\" >\r\n                                        Yes\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"form-check\">\r\n                                    <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" \r\n                                        onChange={() => handleOnChange(\"No\", \"Q5\")} checked={SaveDataPageOne.Q5.No}/>\r\n                                    <label class=\"form-check-label\" >\r\n                                        No\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={() => navigate('/secondpage')} \r\n                    style={{ marginLeft: \"60em\", marginBottom: \"10px\" }}>Next</button>\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default FirstPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\DatePicker.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\utils\\KeyCodeUtils.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SecondPage.js",["466","467","468","469","470"],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FormNationCard.js",["471","472","473","474","475","476","477","478","479","480","481","482"],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\ThirdPage.js",["483","484","485"],[],"import { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport './ThirPage.scss'\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst ThirdPage = (props) => {\r\n    const navigate = useNavigate();\r\n    const account = useSelector(state => state.user.account);\r\n\r\n    const FormatDate = (value) => {\r\n        const today = value;\r\n        const yyyy = today.getFullYear();\r\n        let mm = today.getMonth() + 1; // Months start at 0!\r\n        let dd = today.getDate();\r\n\r\n        if (dd < 10) dd = '0' + dd;\r\n        if (mm < 10) mm = '0' + mm;\r\n\r\n        const formattedToday = dd + '/' + mm + '/' + yyyy;\r\n        return formattedToday;\r\n    }\r\n\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageThree);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageThree(CloneState)\r\n    }\r\n    const [SaveDataPageThree, setSaveDataPageThree] = useState({\r\n        QP3: {\r\n            Yes: false,\r\n            No: false\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageThree');\r\n        if (items) {\r\n            setSaveDataPageThree(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageThree', JSON.stringify(SaveDataPageThree))\r\n    }, [SaveDataPageThree])\r\n\r\n    let CloneData = _.cloneDeep(window.localStorage.getItem('SaveDataPageTwo'));\r\n    CloneData = JSON.parse(CloneData)\r\n    return(\r\n        <>\r\n        <Header/>\r\n        <div className='third-content'>\r\n                <div className='left'> <div>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>4/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Critical data confirmation</div>\r\n                    <div>All information provided is important to the processing of this application.</div>\r\n                    <div>If the information included on this page is incorrect, it may lead to denial of permission to board an aircraft to Australia, even if a visa has been granted.</div>\r\n                    <div>Confirm that the following information is correct and that it is in the correct fields.</div>\r\n\r\n                    <div style={{display: \"flex\"}}>\r\n                        <span>Family name:</span>\r\n                        <span style={{ paddingLeft: \"50px\" }}>\r\n                            {CloneData?.familyName ? CloneData?.familyName : \"default\"}</span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Given names:</span>\r\n                        <span style={{ paddingLeft: \"50px\" }}>\r\n                            {CloneData.givenName ? CloneData.givenName : \"default\"}</span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Sex:</span>\r\n                        <span style={{ paddingLeft: \"115px\" }}>\r\n                            {CloneData?.Q1?.Yes === false ? \r\n                            <span>Male</span> :\r\n                            <span>Female</span>}\r\n                        </span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Date of birth:</span>\r\n                        <span style={{ paddingLeft: \"50px\" }}>{CloneData?.dateOfBirth ? \r\n                            CloneData.dateOfBirth.substring(0, 10) : \"default\"}</span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Country of birth:</span>\r\n                        <span style={{ paddingLeft: \"30px\" }}>{CloneData?.CountryofPassport.label ? CloneData.CountryofPassport.label : \"default\"}</span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Passport number:</span>\r\n                        <span style={{ paddingLeft: \"20px\" }}>{CloneData.passportNumber ? CloneData.passportNumber : \"default\"}</span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span>Country of passport:</span>\r\n                        <span style={{ paddingLeft: \"30px\" }}>{CloneData?.CountryofPassport.label ? CloneData.CountryofPassport.label : \"default\"}</span>\r\n                    </div>\r\n                    <div >Is the above information corrected?</div>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"QP3\")} checked={SaveDataPageThree.QP3.Yes}/>\r\n                                <label class=\"form-check-label\" >\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" \r\n                                    onChange={() => handleOnChange(\"No\", \"QP3\")} checked={SaveDataPageThree.QP3.No}/>\r\n                                <label class=\"form-check-label\" >\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\" , paddingBottom:\"10px\"}}>\r\n                        <button onClick={() => navigate('/secondpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/fourthpage')} style={{ marginLeft: \"60em\" }}>Next</button>\r\n                    </div>\r\n                    \r\n                </div></div>\r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n           </div>\r\n        </>\r\n\r\n        \r\n    )\r\n}\r\nexport default ThirdPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FourPage.js",["486"],[],"import { Form } from \"react-bootstrap\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './FourPage.scss'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Header from \"./Header\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst FourPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [SaveDataPageFour, setSaveDataPageFour] = useState({\r\n        QP4: {\r\n            Yes: false,\r\n            No: false\r\n        }\r\n    })\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageFour);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageFour(CloneState)\r\n    }\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageFour');\r\n        console.log(\"get local storage: \", items);\r\n        if (items) {\r\n            setSaveDataPageFour(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageFour', JSON.stringify(SaveDataPageFour))\r\n    }, [SaveDataPageFour])\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n            <div className=\"fourth-content\">\r\n                <div className=\"left\"><div className=\"fourth-page\" style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Additional identity questions</div>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>5/15</div>\r\n                    <div className=\"fourth-page\">Provide further details below, where available.</div>\r\n                    <div className=\"fourth-page\">Previous travel to Australia</div>\r\n                    <div className=\"fourth-page\">Has this applicant previously travelled to Australia or previously applied for a visa?</div>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <Form className=\"check-radio-answer\">\r\n                            {['radio'].map((type) => (\r\n                                <div key={`default-${type}`} className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        type={type}\r\n                                        id={`question1-${type}`}\r\n                                        label={\"Yes\"}\r\n                                        onChange={() => handleOnChange(\"Yes\", \"QP4\")} checked={SaveDataPageFour.QP4.Yes}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type={type}\r\n                                        id={`question1-${type}`}\r\n                                        label={\"No\"}\r\n                                        onChange={() => handleOnChange(\"No\", \"QP4\")} checked={SaveDataPageFour.QP4.No}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </Form>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/thirdpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/fifthpage')} style={{ marginLeft: \"60em\" }}>Next</button>\r\n\r\n                    </div>\r\n                    </div>\r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>                 \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FourPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FifthPage.js",["487","488"],[],"import { useMemo, useState } from \"react\"\r\nimport Select from 'react-select'\r\nimport countryList from 'react-select-country-list'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './FifthPage.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport { useEffect } from \"react\";\r\nconst FifthPage = () => {\r\n    const navigate = useNavigate();\r\n    const optionsCountry = useMemo(() => countryList().getData(), [])\r\n    \r\n\r\n    const data = {\r\n        UsualCountryOfResidence :\"\",\r\n        Office: \"\",\r\n        Country: \"\",\r\n        Address1: \"\",\r\n        Address2: \"\",\r\n        Town: \"\",\r\n        StateOrProvince: \"\",\r\n        PostalCode: \"\",\r\n        HomePhone: \"\",\r\n        BusinessPhone : \"\",\r\n        CellPhone: \"\",\r\n        Email : \"\",\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        \r\n\r\n    }\r\n    const [SaveDataPageFive, setSaveDataPageFive] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageFive);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageFive(CloneState)\r\n    }\r\n\r\n    const ChangeNation = (value, Id) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageFive);\r\n        CloneState[Id] = value;\r\n        setSaveDataPageFive(CloneState)\r\n    }\r\n\r\n    const handleSetStartDate = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageFive);\r\n\r\n        CloneState[Title] = new Date(value);\r\n        setSaveDataPageFive(CloneState)\r\n    }\r\n\r\n    const HandleChangeInputText = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageFive);\r\n        CloneState[Title] = value;\r\n        setSaveDataPageFive(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageFive');\r\n        if (items) {\r\n            setSaveDataPageFive(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageFive', JSON.stringify(SaveDataPageFive))\r\n    }, [SaveDataPageFive])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n            <div className=\"fifth-content\">\r\n                <div className=\"left\">\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>6/15</div>\r\n                    <div className='Current-location' style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Contact details</div>\r\n                    <div className='Current-location'>Country of residence</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Usual country of residence</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageFive.UsualCountryOfResidence}\r\n                            onChange={(Event) => ChangeNation(Event, \"UsualCountryOfResidence\")}/>\r\n                    </div>\r\n                    <div className='Current-location'>Department office</div>\r\n                    <div className='Current-location'>The applicant may be required to attend an Australian Government Office for an interview. Which is the closest office to the applicant’s current location?</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Office</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageFive.Office}\r\n                            onChange={(Event) => ChangeNation(Event, \"Office\")}/>\r\n                    </div>\r\n                    <div className='Current-location' style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Residential address</div>\r\n                    <div className='Current-location'>Note that a street address is required. A post office address cannot be accepted as a residential address.</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Country</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageFive.Country}\r\n                            onChange={(Event) => ChangeNation(Event, \"Country\")}/>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Address</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.Address1}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Address1\")}></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\"></label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.Address2}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Address2\")}></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Suburb / Town</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.Town}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Town\")}></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">State or Province</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.StateOrProvince}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"StateOrProvince\")}></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Postal code</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.PostalCode}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"PostalCode\")}></input></span>\r\n                    </div>\r\n                    <div className='Current-location' style={{ fontSize: \"20px\", fontWeight: \"600\" }}>Postal address</div>\r\n                    <div className='Current-location'>Is the postal address the same as the residential address?</div>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageFive.Q1.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageFive.Q1.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>Contact telephone numbers</div>\r\n                    <div className='Current-location'>Enter numbers only with no spaces.</div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Home phone</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.HomePhone}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"HomePhone\")}></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Business phone</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.BusinessPhone}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"BusinessPhone\")}\r\n                        ></input></span>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Mobile / Cell phone</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.CellPhone}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"CellPhone\")}></input></span>\r\n                    </div>\r\n                    <div className='Current-location'>Email address</div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Email address</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageFive.Email}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Email\")}></input></span>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/fourthpage')} style={{ marginLeft: \"10px\" }} >Previous</button>\r\n                        <button onClick={() => navigate('/sixthpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                    </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default FifthPage","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SixPage.js",["489"],[],"\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './SixPage.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport { useEffect,useState } from \"react\";\r\nconst SixPage = () => {\r\n\r\n    const data = {\r\n        QM: {\r\n            Ans1: false,\r\n            Ans2: false,\r\n            Ans3: false,\r\n            Ans4: false,\r\n        },\r\n        Email: \"\",\r\n    }\r\n    const [SaveDataPageSix, setSaveDataPageSix] = useState(data)\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageSix);\r\n        if (Question === \"QM\") {\r\n            CloneState.QM.Ans1 = false;\r\n            CloneState.QM.Ans2 = false;\r\n            CloneState.QM.Ans3 = false;\r\n            CloneState.QM.Ans4 = false;\r\n            CloneState[Question][Flag] = true;\r\n        }\r\n        setSaveDataPageSix(CloneState)\r\n    }\r\n    const HandleChangeInputText = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageSix);\r\n        CloneState[Title] = value;\r\n    \r\n        setSaveDataPageSix(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageSix');\r\n        if (items) {\r\n            setSaveDataPageSix(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageSix', JSON.stringify(SaveDataPageSix))\r\n    }, [SaveDataPageSix])\r\n\r\n    const navigate = useNavigate();\r\n    return (\r\n       <>\r\n       <Header/>\r\n            <div className=\"sixpage-container\">\r\n                <div className=\"left\">\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>7/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Authorised recipient</div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>Does the applicant authorise another person to receive written correspondence on their behalf?</div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>This authorises the department to send the authorised person all written correspondence that would otherwise be sent directly to the applicant.</div>\r\n                    <div className=\"check-radio-answer\">\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" \r\n                                checked={SaveDataPageSix.QM.Ans1}\r\n                                onChange={() => handleOnChange(\"Ans1\", \"QM\")} />\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2_1\" \r\n                                checked={SaveDataPageSix.QM.Ans2}\r\n                                onChange={() => handleOnChange(\"Ans2\", \"QM\")} />\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Yes, a registered migration agent\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2_2\" \r\n                                checked={SaveDataPageSix.QM.Ans3}\r\n                                onChange={() => handleOnChange(\"Ans3\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Yes, a legal practitioner\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2_3\" \r\n                                checked={SaveDataPageSix.QM.Ans4}\r\n                                onChange={() => handleOnChange(\"Ans4\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Yes, another person\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>This person is referred to as the 'authorised recipient'</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Electronic communication</div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>The Department prefers to communicate electronically as this provides a faster method of communication.</div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>All correspondence, including notification of the outcome of the application will be sent to:</div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Email address</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageSix.Email}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Email\")}></input></span>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>Note: The holder of this email address may receive a verification email from the Department if the address has not already been verified. If the address holder receives a verification email, they should click on the link to verify their address before this application is submitted.</div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/fifthpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/sevenpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                    </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       </>\r\n    )\r\n}\r\nexport default SixPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SevenPage.js",["490"],[],"import \"react-datepicker/dist/react-datepicker.css\";\r\nimport './SevenPage.scss'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport { useEffect,useState } from \"react\";\r\nconst SevenPage = () => {\r\n    const account = useSelector(state => state.user.account);\r\n    const navigate = useNavigate();\r\n\r\n    const data = {\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n    }\r\n    const [SaveDataPageSeven, setSaveDataPageSeven] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageSeven);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageSeven(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageSeven');\r\n        if (items) {\r\n            setSaveDataPageSeven(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageSeven', JSON.stringify(SaveDataPageSeven))\r\n    }, [SaveDataPageSeven])\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n            <div className=\"sevenpage-container\">\r\n                <div className=\"left\">\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>8/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Education</div>\r\n                    <div className='Current-location'>\r\n                        <span>Does the applicant meet the education requirements for this visa?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageSeven.Q1.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageSeven.Q1.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>Give details of all past and current studies undertaken at secondary level or above.</div>\r\n                    <table style={{ paddingLeft: \"20px\" }} className=\"table-second-page\">\r\n                        <tr>\r\n                            <th>Qualification</th>\r\n                            <th>Institution name</th>\r\n                            <th>Course name</th>\r\n                            <th>Date from</th>\r\n                            <th>Date to</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>{account?.Qualification?.label ? account.Qualification.label : \"default\"}</th>\r\n                            <th>{account?.Institution ? account.Institution : \"default\"}</th>\r\n                            <th>{account?.Course ? account.Course : \"default\"}</th>\r\n                            <th>{account?.DateFrom ? account.DateFrom : \"default\"}</th>\r\n                            <th>{account?.DateTo ? account.DateTo : \"default\"}</th>\r\n                            <th>Edit/Delete</th>\r\n                        </tr>\r\n                    </table>\r\n                    <button onClick={() => navigate('/detail-studies')}>Add</button>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/sixthpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <div><button onClick={() => navigate('/eightpage')} style={{ marginLeft: \"60em\" }}>Next</button></div></div>\r\n                </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default SevenPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\DetailStudies.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\EightPage_New.js",["491","492"],[],"import { defaultsDeep } from \"lodash\"\r\nimport Select from 'react-select'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\nimport './EightPage.scss'\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport { useEffect,useState } from \"react\";\r\nconst EightPage_New = () => {\r\n    const navigate = useNavigate();\r\n    const options = [\r\n        { value: 'Accommodation and Food Services', label: 'Accommodation and Food Services' },\r\n        { value: 'Administrative and Support Services', label: 'Administrative and Support Services' },\r\n        { value: 'Agriculture, Forestry and Fishing', label: 'Agriculture, Forestry and Fishing' },\r\n        { value: 'Arts and Recreation Services', label: 'Arts and Recreation Services' },\r\n        { value: 'Construction', label: 'Construction' },\r\n        { value: 'Education and Training', label: 'Education and Training' },\r\n        { value: 'Electricity, Gas, Water and Waste Services', label: 'Electricity, Gas, Water and Waste Services' },\r\n        { value: 'Financial and Insurance Services', label: 'Financial and Insurance Services' },\r\n        { value: 'Health Care and Social Assistance', label: 'Health Care and Social Assistance' },\r\n        { value: 'Information Media and Telecommunications', label: 'Information Media and Telecommunications' },\r\n        { value: 'Manufacturing', label: 'Manufacturing' },\r\n        { value: 'Mining', label: 'Mining' },\r\n        { value: 'Other Services', label: 'Other Services' },\r\n        { value: 'Professional, Scientific and Technical Services', label: 'Professional, Scientific and Technical Services' },\r\n        { value: 'Public Administration and Safety', label: 'Public Administration and Safety' },\r\n        { value: 'Rental, Hiring and Real Estate Services', label: 'Rental, Hiring and Real Estate Services' },\r\n        { value: 'Retail Trade', label: 'Retail Trade' },\r\n        { value: 'Transport, Postal and Warehousing', label: 'Transport, Postal and Warehousing' },\r\n        { value: 'Wholesale Trade', label: 'Wholesale Trade' },\r\n    ]\r\n\r\n    const data = {\r\n        Occupation: \"\",\r\n        IndustryType: \"\",\r\n    }\r\n    const [SaveDataPageEight, setSaveDataPageEight] = useState(data)\r\n    const ChangeNation = (value, Id) => {\r\n\r\n        let CloneState = _.cloneDeep(SaveDataPageEight);\r\n        CloneState[Id] = value;\r\n        setSaveDataPageEight(CloneState)\r\n    }\r\n\r\n    const HandleChangeInputText = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageEight);\r\n        CloneState[Title] = value;\r\n        setSaveDataPageEight(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageEight');\r\n        if (items) {\r\n            setSaveDataPageEight(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageEight', JSON.stringify(SaveDataPageEight))\r\n    }, [SaveDataPageEight])\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n            <div className=\"eightpage-container\">\r\n                <div className=\"left\">\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>9/15</div>\r\n                    <div style={{ paddingLeft: \"10px\",fontSize: \"20px\", fontWeight: \"600\"}} >Employment</div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>Usual occupation</div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\">Usual occupation</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6'\r\n                            value={SaveDataPageEight.Occupation}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"Occupation\")}></input></span>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"10px\" }}>Intended employment</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Industry type</span>\r\n                        <Select options={options} className=\"select\" \r\n                            value={SaveDataPageEight.IndustryType}\r\n                            onChange={(Event) => ChangeNation(Event, \"IndustryType\")}/>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/sevenpage')} style={{ marginLeft: \"10px\" }} >Previous</button>\r\n                        <button onClick={() => navigate('/ninethpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                    </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default EightPage_New;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\NinePage.js",["493","494","495","496"],[],"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useMemo, useState } from \"react\"\r\nimport { Form } from \"react-bootstrap\"\r\nimport Select from 'react-select'\r\nimport countryList from 'react-select-country-list'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Header from './Header';\r\nimport './NinePage.scss'\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport { useEffect } from \"react\";\r\n\r\nconst NinePage = () => {\r\n    const navigate = useNavigate();\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    \r\n    const optionsCountry = useMemo(() => countryList().getData(), [])\r\n    \r\n    const options = [\r\n        { value: 'Cambridge English: Advanced (CAE)', label: 'Cambridge English: Advanced (CAE)' },\r\n        { value: 'IELTS', label: 'IELTS' },\r\n        { value: 'OET', label: 'OET' },\r\n        { value: 'PTE Academic', label: 'PTE Academic' },\r\n        { value: 'TOEFL iBT', label: 'TOEFL iBT' },\r\n        \r\n    ]\r\n    const options2 = [\r\n        { value: 'Proficient', label: 'Proficient' },\r\n        { value: 'Competent', label: 'Competent' },\r\n        { value: 'Functional', label: 'Functional' },\r\n        { value: 'Vocational', label: 'Vocational' },\r\n        { value: 'Superior', label: 'Superior' },\r\n\r\n    ]\r\n\r\n    const data = {\r\n        Name : \"\",\r\n        Date : new Date(),\r\n        NumberOfTest : \"\",\r\n        Country : \"\",\r\n        Language: \"\",\r\n        MainLanguage: \"\",\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        QM: {\r\n            Ans1: false,\r\n            Ans2: false,\r\n            Ans3: false,\r\n            Ans4: false,\r\n            Ans5: false,\r\n        }\r\n        \r\n\r\n    }\r\n    const [SaveDataPageNine, setSaveDataPageNine] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageNine);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        if (Question === \"QM\") {\r\n            CloneState.QM.Ans1 = false;\r\n            CloneState.QM.Ans2 = false;\r\n            CloneState.QM.Ans3 = false;\r\n            CloneState.QM.Ans4 = false;\r\n            CloneState.QM.Ans5 = false;\r\n            CloneState[Question][Flag] = true;\r\n        }\r\n        setSaveDataPageNine(CloneState)\r\n    }\r\n\r\n    const ChangeNation = (value, Id) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageNine);\r\n        CloneState[Id] = value;\r\n        setSaveDataPageNine(CloneState)\r\n    }\r\n\r\n    const handleSetStartDate = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageNine);\r\n\r\n        CloneState[Title] = new Date(value);\r\n        setSaveDataPageNine(CloneState)\r\n    }\r\n\r\n    const HandleChangeInputText = (value, Title) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageNine);\r\n        CloneState[Title] = value;\r\n        setSaveDataPageNine(CloneState)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageNine');\r\n        if (items) {\r\n            setSaveDataPageNine(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageNine', JSON.stringify(SaveDataPageNine))\r\n    }, [SaveDataPageNine])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className='nine-content'>\r\n                <div className='left'>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>10/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Language</div>\r\n                    <div className='Current-location'>\r\n                        <span>Does the applicant hold a current passport from the USA, UK, Canada, New Zealand, or the republic of Ireland?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageNine.Q1.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageNine.Q1.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Does the applicant have at least functional English language ability?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageNine.Q2.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageNine.Q2.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>Select the options which represent proof of the applicant having functional English</div>\r\n                    <div className=\"check-radio-answer\" style={{ paddingLeft: \"18em\" }}>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" name=\"flexRadioDefault2_1\" \r\n                                checked={SaveDataPageNine?.QM?.Ans1}\r\n                                onChange={() => handleOnChange(\"Ans1\", \"QM\")} />\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Completion of an English language proficiency test of at least functional level within the last 12 months\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" name=\"flexRadioDefault2_2\" \r\n                                checked={SaveDataPageNine?.QM?.Ans2}\r\n                                onChange={() => handleOnChange(\"Ans2\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Completed at least 5 years of secondary education at institutions in which all instruction was conducted in English\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" name=\"flexRadioDefault2_3\" \r\n                                checked={SaveDataPageNine?.QM?.Ans3}\r\n                                onChange={() => handleOnChange(\"Ans3\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Completed, in Australia, at least 1 year of full-time study or equivalent part-time study towards a degree, higher degree, diploma, or associate diploma, at an institution or institutions where all instruction was conducted in English\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" name=\"flexRadioDefault2_4\" \r\n                                checked={SaveDataPageNine?.QM?.Ans4}\r\n                                onChange={() => handleOnChange(\"Ans4\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Successfully completed the 'Bagrut Exam' in the level of 3 study units\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"checkbox\" name=\"flexRadioDefault2_5\" \r\n                                checked={SaveDataPageNine?.QM?.Ans5}\r\n                                onChange={() => handleOnChange(\"Ans5\", \"QM\")}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                Other\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>English test details</div>\r\n                    <div className='Current-location'>Give details of the most recent English test.</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Name of test</span>\r\n                        <Select options={options} className=\"select\" \r\n                            value={SaveDataPageNine.Name}\r\n                            onChange={(Event) => ChangeNation(Event, \"Name\")}/>\r\n                    </div>\r\n                    <div className=\"DatePicker\" style={{ display: \"flex\", paddingLeft: \"10px\" }}>\r\n                        <div >Date of test</div>\r\n                        <div className=\"child-date\" style={{ paddingLeft: \"19.2em\" }}>\r\n                            <DatePicker \r\n                                selected={Date.parse(SaveDataPageNine.Date)}\r\n                                onChange={(Date) => handleSetStartDate(Date, \"Date\")}/>  </div>\r\n                    </div>\r\n                    <div className='parent'>\r\n                        <label className=\"title\" style={{ width: \"29.3%\" }}>Test reference number</label>\r\n                        <span className=\"inputform\"><input className='form-control col-6' style={{ marginTop: \"3px\",}}\r\n                            value={SaveDataPageNine.NumberOfTest}\r\n                            onChange={(Event) => HandleChangeInputText(Event.target.value, \"NumberOfTest\")}></input></span>\r\n                    </div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Country where test was undertaken</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageNine.Country}\r\n                            onChange={(Event) => ChangeNation(Event, \"Country\")}/>\r\n                    </div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Language ability</span>\r\n                        <Select options={options2} className=\"select\" \r\n                            value={SaveDataPageNine.Language}\r\n                            onChange={(Event) => ChangeNation(Event, \"Language\")}/>\r\n                    </div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Main language</div>\r\n                    <div className='status'>\r\n                        <span className='title-status'>Main language</span>\r\n                        <Select options={optionsCountry} className=\"select\" \r\n                            value={SaveDataPageNine.MainLanguage}\r\n                            onChange={(Event) => ChangeNation(Event, \"MainLanguage\")}/>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/eightpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/tenthpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default NinePage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\TenthPage.js",["497","498"],[],"import { useNavigate } from 'react-router-dom';\r\nimport { useMemo, useState,useEffect } from \"react\"\r\nimport Header from './Header';\r\nimport _, { cloneDeep } from \"lodash\"\r\nimport './TenthPage.scss'\r\nconst TenthPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const data = {\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q3: {\r\n            Yes: false,\r\n            No: false,\r\n        },\r\n        Q4: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q5: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q6: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q7: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q8: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q9: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n\r\n    }\r\n    const [SaveDataPageTen, setSaveDataPageTen] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageTen);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageTen(CloneState)\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageTen');\r\n        if (items) {\r\n            setSaveDataPageTen(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageTen', JSON.stringify(SaveDataPageTen))\r\n    }, [SaveDataPageTen])\r\n\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <Header/>\r\n        <div className='tent-content'>\r\n            <div className='left'>\r\n                <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>11/15</div>\r\n                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Health declarations</div>\r\n                <div className='Current-location'>\r\n                    <span>In the last five years, has any applicant visited, or lived, outside their\r\n                        country of passport, for more than 3 consecutive months? Do not include time spent in Australia.</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageTen?.Q1?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageTen?.Q1?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant intend to enter a hospital or a health care facility (including nursing homes) while in Australia?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageTen?.Q2?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageTen?.Q2?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant intend to work as, or study or train to be, a health care worker or work within a health care facility while in Australia?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q3\")} checked={SaveDataPageTen?.Q3?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q3\")} checked={SaveDataPageTen?.Q3?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant intend to work, study or train within aged care or disability care while in Australia?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q4\")} checked={SaveDataPageTen?.Q4?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q4\")} checked={SaveDataPageTen?.Q4?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant intend to work or be a trainee at a child care centre (including preschools and creches) while in Australia?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q5\")} checked={SaveDataPageTen?.Q5?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q5\")} checked={SaveDataPageTen?.Q5?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant intend to be in a classroom situation for more than 3 months (eg. as either a student, teacher, lecturer or observer)?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q6\")} checked={SaveDataPageTen?.Q6?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q6\")} checked={SaveDataPageTen?.Q6?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>Has any applicant:</div>\r\n                <li className='Current-location'>ever had, or currently have, tuberculosis?</li>\r\n                <li className='Current-location'>been in close contact with a family member that has active tuberculosis?</li>\r\n\r\n                <div className='Current-location'>\r\n                    <span><li>ever had a chest x-ray which showed an abnormality?</li></span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q7\")} checked={SaveDataPageTen?.Q7?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q7\")} checked={SaveDataPageTen?.Q7?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>During their proposed visit to Australia, does any applicant expect to incur medical costs, or require treatment or medical follow up for:</div>\r\n                <li className='Current-location'>blood disorder</li>\r\n                <li className='Current-location'>cancer</li>\r\n                <li className='Current-location'>heart disease</li>\r\n                <li className='Current-location'>hepatitis B or C and/or liver disease</li>\r\n                <li className='Current-location'>HIV infection, including AIDS</li>\r\n                <li className='Current-location'>kidney disease, including dialysis</li>\r\n                <li className='Current-location'>mental illness</li>\r\n                <li className='Current-location'>pregnancy</li>\r\n                <li className='Current-location'>respiratory disease that has required hospital admission or oxygen therapy</li>\r\n                <div className='Current-location'>\r\n                    <span><li>other?</li></span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q8\")} checked={SaveDataPageTen?.Q8?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q8\")} checked={SaveDataPageTen?.Q8?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='Current-location'>\r\n                    <span>Does any applicant require assistance with mobility or care due to a medical condition?</span>\r\n                    <div class=\"form-check-label\" >\r\n                        <div className=\"check-radio\"></div>\r\n                        <div className=\"check-radio-answer\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault1\" \r\n                                onChange={() => handleOnChange(\"Yes\", \"Q9\")} checked={SaveDataPageTen?.Q9?.Yes}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                Yes\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"form-check\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault2\" \r\n                                onChange={() => handleOnChange(\"No\", \"Q9\")} checked={SaveDataPageTen?.Q9?.No}/>\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                    <button onClick={() => navigate('/ninethpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                    <button onClick={() => navigate('/eleventhpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n            </div>\r\n                \r\n            <div className=\"right\">\r\n                <div className=\"up-content\">\r\n                    <div className=\"title-right\">Related Links</div>\r\n                    <div className=\"content-right\">\r\n                        <div>Subclass 462 information</div>\r\n                        <div>Health details</div>\r\n                        <div>Visa Pricing Estimator</div>\r\n                        <div>Processing times</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"down-content\">\r\n                    <div className=\"title-right\">Help and Support</div>\r\n                    <div className=\"content-right\">\r\n                        <div>Contact us</div>\r\n                        <div>Client service charter</div>\r\n                        <div>Client feedback</div>\r\n                        <div>ImmiAccount support</div>\r\n                        <div>Translation services</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\nexport default TenthPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\EleventhPage.js",["499"],[],"import { useNavigate } from 'react-router-dom';\r\nimport {useState,useEffect } from \"react\"\r\nimport Header from './Header';\r\nimport './EleventhPage.scss'\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst EleventhPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const data = {\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q3: {\r\n            Yes: false,\r\n            No: false,\r\n        },\r\n        Q4: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q5: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q6: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q7: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q8: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q9: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q10: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q11: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q12: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q13: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q14: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q15: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q16: {\r\n            Yes: false,\r\n            No: false\r\n        }, \r\n        Q17: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        \r\n\r\n    }\r\n    const [SaveDataPageEleven, setSaveDataPageEleven] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageEleven);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageEleven(CloneState)\r\n    }\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageEleven');\r\n        if (items) {\r\n            setSaveDataPageEleven(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageEleven', JSON.stringify(SaveDataPageEleven))\r\n    }, [SaveDataPageEleven])\r\n\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className='ele-content'>\r\n                <div className='left'>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>12/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Character declarations</div>\r\n                    <div className='Current-location'>If the applicant answers ‘Yes’ to any of the character declarations they must give all relevant details.\r\n                        For combined applications, state which applicant the declaration applies to</div>\r\n                    <div className='Current-location'>If the matter relates to a criminal conviction, provide:</div>\r\n                    <li className='Current-location'>the date and nature of the offence</li>\r\n                    <li className='Current-location'>full details of the sentence</li>\r\n                    <li className='Current-location'>dates of any period of imprisonment or other detention.</li>\r\n\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been charged with any offence that is currently awaiting legal action?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageEleven?.Q1?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageEleven?.Q1?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been convicted of an offence in any country (including any conviction which is now removed from official records)?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageEleven?.Q2?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault2\"\r\n                                    onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageEleven?.Q2?.No} \r\n                                    />\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been the subject of a domestic violence or family violence order, or any other order, of a tribunal or court or other similar authority, for the personal protection of another person?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q3\")} checked={SaveDataPageEleven?.Q3?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q3\")} checked={SaveDataPageEleven?.Q3?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been the subject of an arrest warrant or Interpol notice?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q4\")} checked={SaveDataPageEleven?.Q4?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q4\")} checked={SaveDataPageEleven?.Q4?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been found guilty of a sexually based offence involving a child (including where no conviction was recorded)?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q5\")} checked={SaveDataPageEleven?.Q5?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q5\")} checked={SaveDataPageEleven?.Q5?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been named on a sex offender register?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault1\"\r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q6\")} checked={SaveDataPageEleven?.Q6?.Yes} />\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q6\")} checked={SaveDataPageEleven?.Q6?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been acquitted of any offence on the grounds of unsoundness of mind or insanity?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q7\")} checked={SaveDataPageEleven?.Q7?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q7\")} checked={SaveDataPageEleven?.Q7?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been found by a court not fit to plead?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q8\")} checked={SaveDataPageEleven?.Q8?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q8\")} checked={SaveDataPageEleven?.Q8?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been directly or indirectly involved in, or associated with, activities which would represent\r\n                            a risk to national security in Australia or any other country?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q9\")} checked={SaveDataPageEleven?.Q9?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q9\")} checked={SaveDataPageEleven?.Q9?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been charged with, or indicted for: genocide, war crimes, crimes against humanity,\r\n                            torture, slavery, or any other crime that is otherwise of a serious international concern?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q10\")} checked={SaveDataPageEleven?.Q10?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q10\")} checked={SaveDataPageEleven?.Q10?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been associated with a person, group or organisation that has been or is involved in criminal conduct?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault10\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q11\")} checked={SaveDataPageEleven?.Q11?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault10\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q11\")} checked={SaveDataPageEleven?.Q11?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been associated with an organisation engaged in violence or engaged in acts of violence (including war, insurgency,\r\n                            freedom fighting, terrorism, protest) either overseas or in Australia?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault11\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q12\")} checked={SaveDataPageEleven?.Q12?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault11\" id=\"flexRadioDefault2\"\r\n                                    onChange={() => handleOnChange(\"No\", \"Q12\")} checked={SaveDataPageEleven?.Q12?.No} />\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever undergone any military/paramilitary training,\r\n                            been trained in weapons/explosives or in the manufacture of chemical/biological products?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault12\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q13\")} checked={SaveDataPageEleven?.Q13?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault12\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q13\")} checked={SaveDataPageEleven?.Q13?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been involved in people smuggling or people trafficking offences?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault13\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q14\")} checked={SaveDataPageEleven?.Q14?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault13\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q14\")} checked={SaveDataPageEleven?.Q14?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever been removed, deported or excluded from any country (including Australia)?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault14\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q15\")} checked={SaveDataPageEleven?.Q15?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault14\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q15\")} checked={SaveDataPageEleven?.Q15?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever overstayed a visa in any country (including Australia)?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault15\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q16\")} checked={SaveDataPageEleven?.Q16?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault15\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q16\")} checked={SaveDataPageEleven?.Q16?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Has any applicant ever had any outstanding debts to the Australian Government or any public authority in Australia?</span>\r\n                        <div class=\"form-check-label\" >\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault16\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q17\")} checked={SaveDataPageEleven?.Q17?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault16\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q17\")} checked={SaveDataPageEleven?.Q17?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\",  paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/tenthpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/twelvethpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                </div>\r\n                    \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default EleventhPage","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\TwelvethPage.js",["500"],[],"import { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport { useState, useEffect } from \"react\"\r\nimport './TwelvethPage.scss'\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst TwelvethPage = () => {\r\n\r\n    const data = {\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q3: {\r\n            Yes: false,\r\n            No: false,\r\n        },\r\n        Q4: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q5: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        \r\n\r\n\r\n    }\r\n    const [SaveDataPageTwel, setSaveDataPageTwel] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageTwel);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageTwel(CloneState)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageTwel');\r\n        if (items) {\r\n            setSaveDataPageTwel(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageTwel', JSON.stringify(SaveDataPageTwel))\r\n    }, [SaveDataPageTwel])\r\n\r\n    console.log(\"check data 123: \",SaveDataPageTwel);\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div className='twel-content'>\r\n                <div className='left'>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>13/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Work and Holiday declarations</div>\r\n                    <div className='Current-location'>Warning:</div>\r\n                    <div className='Current-location'>Giving false or misleading information is a serious offence.</div>\r\n                    <div className='Current-location'>The applicant declares that they:</div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that they must abide by the conditions of the visa.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageTwel?.Q1?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageTwel?.Q1?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that the visa they are applying for does not permit\r\n                            them to be employed in Australia with one employer for more than 6 months without prior permission.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageTwel?.Q2?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageTwel?.Q2?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that the visa they are applying for does not\r\n                            permit them to undertake studies or training for more than 4 months.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q3\")} checked={SaveDataPageTwel?.Q3?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q3\")} checked={SaveDataPageTwel?.Q3?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Have sufficient funds for the initial period of their\r\n                            stay in Australia and for the fare to their intended overseas destination on leaving Australia.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q4\")} checked={SaveDataPageTwel?.Q4?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q4\")} checked={SaveDataPageTwel?.Q4?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that any employment is incidental to their holiday in Australia and the purpose of\r\n                            working is to supplement their holiday funds..</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q5\")} checked={SaveDataPageTwel?.Q5?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q5\")} checked={SaveDataPageTwel?.Q5?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/eleventhpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/threeteenthpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                </div>\r\n                   \r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TwelvethPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\ThreeTeenthPage.js",["501"],[],"import { useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport './ThreeTeenthPage.scss'\r\nimport { useState, useEffect } from \"react\"\r\nimport _, { cloneDeep } from \"lodash\"\r\nconst ThreeteenthPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const data = {\r\n        Q1: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q2: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q3: {\r\n            Yes: false,\r\n            No: false,\r\n        },\r\n        Q4: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q5: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q6: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q7: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q8: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q9: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q10: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q11: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q12: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q13: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n        Q14: {\r\n            Yes: false,\r\n            No: false\r\n        },\r\n    }\r\n    const [SaveDataPageThirdteen, setSaveDataPageThirdteen] = useState(data)\r\n\r\n    const handleOnChange = (Flag, Question) => {\r\n        let CloneState = _.cloneDeep(SaveDataPageThirdteen);\r\n\r\n        if (Flag === \"Yes\") {\r\n            CloneState[Question].Yes = true;\r\n            CloneState[Question].No = false;\r\n        } else if (Flag === \"No\") {\r\n            CloneState[Question].Yes = false;\r\n            CloneState[Question].No = true;\r\n        }\r\n        setSaveDataPageThirdteen(CloneState)\r\n    }\r\n    useEffect(() => {\r\n        const items = window.localStorage.getItem('SaveDataPageThirdteen');\r\n        if (items) {\r\n            setSaveDataPageThirdteen(JSON.parse(items));\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        window.localStorage.setItem('SaveDataPageThirdteen', JSON.stringify(SaveDataPageThirdteen))\r\n    }, [SaveDataPageThirdteen])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className='thirdteen-content'>\r\n                <div className='left'>\r\n                    <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>14/15</div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Declarations </div>\r\n                    <div className='Current-location'>Warning:</div>\r\n                    <div className='Current-location'>Giving false or misleading information is a serious offence.</div>\r\n                    <div className='Current-location'>The applicant declares that they:</div>\r\n                    <div className='Current-location'>\r\n                        <span>Have read and understood the information provided to them in this application.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q1\")} checked={SaveDataPageThirdteen?.Q1?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q1\")} checked={SaveDataPageThirdteen?.Q1?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Have provided complete and correct information in every detail on this form, and on any attachments to it.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q2\")} checked={SaveDataPageThirdteen?.Q2?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault1\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q2\")} checked={SaveDataPageThirdteen?.Q2?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that if any fraudulent documents or false or\r\n                            misleading information has been provided with this application,\r\n                            or if any of the applicants fail to satisfy the Minister of their identity,\r\n                            the application may be refused and the applicant(s), and any member of their\r\n                            family unit, may become unable to be granted a visa for a specified period of time.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q3\")} checked={SaveDataPageThirdteen?.Q3?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault2\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q3\")} checked={SaveDataPageThirdteen?.Q3?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that if documents are found to be fraudulent or information to be\r\n                            incorrect after the grant of a visa, the visa may subsequently be cancelled.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q4\")} checked={SaveDataPageThirdteen?.Q4?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault3\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q4\")} checked={SaveDataPageThirdteen?.Q4?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Understand that if this application is approved, any person not included in this application will not have automatic right of entry to Australia.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q5\")} checked={SaveDataPageThirdteen?.Q5?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault4\" id=\"flexRadioDefault2\"\r\n                                    onChange={() => handleOnChange(\"No\", \"Q5\")} checked={SaveDataPageThirdteen?.Q5?.No} />\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>Will inform the Department in writing immediately as they become aware of a\r\n                            change in circumstances (including change of address) or if there is any change relating to information they have\r\n                            provided in or with this application, while it is being considered..</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q6\")} checked={SaveDataPageThirdteen?.Q6?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault5\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q6\")} checked={SaveDataPageThirdteen?.Q6?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Have read the information contained in the Privacy Notice (Form 1442i).</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q7\")} checked={SaveDataPageThirdteen?.Q7?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault6\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q7\")} checked={SaveDataPageThirdteen?.Q7?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Understand that the department may collect, use and disclose the applicant's personal information\r\n                            (including biometric information and other sensitive information) as outlined in the Privacy Notice (Form 1442i).</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q8\")} checked={SaveDataPageThirdteen?.Q8?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault7\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q8\")} checked={SaveDataPageThirdteen?.Q8?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Give consent to the collection of their fingerprints and facial image if required.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q9\")} checked={SaveDataPageThirdteen?.Q9?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault8\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q9\")} checked={SaveDataPageThirdteen?.Q9?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Understand that, if required to provide their fingerprints and facial image, the\r\n                            applicant's fingerprints and facial image and biographical information held by the Department\r\n                            may be given to Australian law enforcement agencies to help\r\n                            identify the applicant and determine eligibility for grant of the visa being applied for, and for law enforcement purposes.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q10\")} checked={SaveDataPageThirdteen?.Q10?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault9\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q10\")} checked={SaveDataPageThirdteen?.Q10?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Give consent to Australian law enforcement agencies disclosing the applicant's biometric,\r\n                            biographical and criminal record information to the Department\r\n                            to help identify the applicant, to determine eligibility for grant of a visa and for law enforcement purposes.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault10\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q11\")} checked={SaveDataPageThirdteen?.Q11?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault10\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q11\")} checked={SaveDataPageThirdteen?.Q11?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Give consent to the Department using the applicant's biometric, biographical and criminal record\r\n                            information obtained for the purposes of the Migration Act 1958 or the Citizenship Act 2007.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault11\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q12\")} checked={SaveDataPageThirdteen?.Q12?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault11\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q12\")} checked={SaveDataPageThirdteen?.Q12?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='Current-location'>As an applicant:</div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            I understand that if my visa ceases to be in effect and I do not hold another\r\n                            visa to remain in Australia at that time, I will be an unlawful non-citizen under the Migration Act 1958. As such,\r\n                            I will be expected to depart from Australia, and be subject to removal under the Migration Act 1958.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault12\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q13\")} checked={SaveDataPageThirdteen?.Q13?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault12\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q13\")} checked={SaveDataPageThirdteen?.Q13?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Australian values </div>\r\n                    <div className='Current-location'>\r\n                        <span>\r\n                            Each applicant who is 18 years or over has read, or had explained to them, information provided by the\r\n                            Australian Government on Australian society and values, and agrees to the Australian values statement.</span>\r\n                        <div class=\"form-check-label\" style={{ width: \"50%\" }}>\r\n                            <div className=\"check-radio\"></div>\r\n                            <div className=\"check-radio-answer\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault13\" id=\"flexRadioDefault1\" \r\n                                    onChange={() => handleOnChange(\"Yes\", \"Q14\")} checked={SaveDataPageThirdteen?.Q14?.Yes}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    Yes\r\n                                </label>\r\n                            </div>\r\n                            <div class=\"form-check\">\r\n                                <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault13\" id=\"flexRadioDefault2\" \r\n                                    onChange={() => handleOnChange(\"No\", \"Q14\")} checked={SaveDataPageThirdteen?.Q14?.No}/>\r\n                                <label class=\"form-check-label\" for=\"flexRadioDefault2\">\r\n                                    No\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", paddingBottom: \"10px\" }}>\r\n                        <button onClick={() => navigate('/twelvethpage')} style={{ marginLeft: \"10px\" }}>Previous</button>\r\n                        <button onClick={() => navigate('/fourteenpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <div className=\"up-content\">\r\n                        <div className=\"title-right\">Related Links</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Subclass 462 information</div>\r\n                            <div>Health details</div>\r\n                            <div>Visa Pricing Estimator</div>\r\n                            <div>Processing times</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"down-content\">\r\n                        <div className=\"title-right\">Help and Support</div>\r\n                        <div className=\"content-right\">\r\n                            <div>Contact us</div>\r\n                            <div>Client service charter</div>\r\n                            <div>Client feedback</div>\r\n                            <div>ImmiAccount support</div>\r\n                            <div>Translation services</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThreeteenthPage;","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\reducer\\rootReducer.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\redux\\reducer\\userReducer.js",[],[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\Notice.js",[],[],"D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\FourteenPage.js",["502"],[],"import Header from \"./Header\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nconst FourteenPage = () => {\r\n    const navigate = useNavigate();\r\n    const options = [\r\n        { value: 'Accepted and deferred', label: 'Accepted and deferred' },\r\n        { value: 'Enrolled and deferred', label: 'Enrolled and deferred' },\r\n        { value: 'Currently enrolled', label: 'Currently enrolled' },\r\n        { value: 'Graduated', label: 'Graduated' },\r\n    ]\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"fourtee-content\">\r\n                <div style={{ justifyContent: \"center\", alignContent: \"center\", display: \"flex\" }}>15/15</div>\r\n                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Attach documents</div>\r\n                <div style={{ paddingLeft: \"10px\" }}>Transaction Reference Number (TRN):EGOY85FCFC</div>\r\n                <div style={{ paddingLeft: \"10px\" }}>Attach the documents listed below then click Next to pay for and submit the application.</div>\r\n                <div style={{ paddingLeft: \"10px\" }}>If you choose to submit the application without attaching all required documents, you will need to provide a reason.</div>\r\n                <div style={{ paddingLeft: \"10px\" }}>Applications submitted without all the required documents may take longer to process.</div>\r\n                <div style={{ paddingLeft: \"10px\" }}>There are specific quality and formatting requirements when scanning documents.</div>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            Travel Document\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <div>\r\n                                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Add documents</div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"20em\" }}>Document Type</div>\r\n                                    <select >\r\n                                        <option value=\"Please\">Please select a value...</option>\r\n                                        <option value=\"Passport\">Passport</option>\r\n                                        <option value=\"Other\">Other (specify)</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22em\" }}>Description</div>\r\n                                    <input></input>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22.4em\" }}>File names</div>\r\n                                    <input type='file'></input>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n                <Accordion defaultActiveKey=\"2\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            Photograph - Passport\t\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <div>\r\n                                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Add documents</div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"20em\" }}>Document Type</div>\r\n                                    <select >\r\n                                        <option value=\"Please\">Please select a value...</option>\r\n                                        <option value=\"Photograph\">Photograph - Passport</option>\r\n                                        <option value=\"Other\">Other (specify)</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22em\" }}>Description</div>\r\n                                    <input></input>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22.4em\" }}>File names</div>\r\n                                    <input type='file'></input>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion defaultActiveKey=\"3\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            Evidence of funds for stay in Australia and departure\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <div>\r\n                                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Add documents</div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"20em\" }}>Document Type</div>\r\n                                    <select >\r\n                                        <option value=\"Please\">Please select a value...</option>\r\n                                        <option value=\"Bank\">Bank Statement - Personal</option>\r\n                                        <option value=\"Other\">Other (specify)</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22em\" }}>Description</div>\r\n                                    <input></input>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22.4em\" }}>File names</div>\r\n                                    <input type='file'></input>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion defaultActiveKey=\"4\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            Language Ability - English, Evidence of\t\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <div>\r\n                                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Add documents</div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"20em\" }}>Document Type</div>\r\n                                    <select >\r\n                                        <option value=\"Please\">Please select a value...</option>\r\n                                        <option class=\"wc-option\" value=\"DT050\">Evidence of Australian Qualifications</option>\r\n                                        <option class=\"wc-option\" value=\"DT051\">Evidence of Australian Work Experience</option>\r\n                                        <option class=\"wc-option\" value=\"DT083\">International English Language Testing System (IELTS)</option>\r\n                                        <option class=\"wc-option\" value=\"DT125\">Occupational English Test Certificate</option>\r\n                                        <option class=\"wc-option\" value=\"DT127\">Other (specify)</option>\r\n                                        <option class=\"wc-option\" value=\"DT128\">Other English Language Test Document</option>\r\n                                        <option class=\"wc-option\" value=\"DT132\">Passport</option>\r\n                                        <option class=\"wc-option\" value=\"DT335\">Pearson Test of English Academic (PTE Academic)</option>\r\n                                        <option class=\"wc-option\" value=\"DT336\">Cambridge English: Advanced (CAE) Test</option>\r\n                                        <option class=\"wc-option\" value=\"DT337\">Test of English as a Foreign Language internet-based test (TOEFL iBT)</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22em\" }}>Description</div>\r\n                                    <input></input>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22.4em\" }}>File names</div>\r\n                                    <input type='file'></input>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <Accordion defaultActiveKey=\"5\">\r\n                    <Accordion.Item eventKey=\"0\">\r\n                        <Accordion.Header>\r\n                            Qualifications - Overseas, Evidence of\t\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                            <div>\r\n                                <div style={{ fontSize: \"20px\", fontWeight: \"600\", paddingLeft: \"10px\" }}>Add documents</div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"20em\" }}>Document Type</div>\r\n                                    <select >\r\n                                        <option class=\"wc-option\" value=\"\" selected=\"\">Please select a value...</option>\r\n                                        <option class=\"wc-option\" value=\"DT001\">Academic Transcript</option>\r\n                                        <option class=\"wc-option\" value=\"DT018\">CADGEC</option>\r\n                                        <option class=\"wc-option\" value=\"DT041\">Educational Certificate (Degree, Diploma etc)</option>\r\n                                        <option class=\"wc-option\" value=\"DT097\">Letter/Statement - Education Institution</option>\r\n                                        <option class=\"wc-option\" value=\"DT127\">Other (specify)</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22em\" }}>Description</div>\r\n                                    <input></input>\r\n                                </div>\r\n                                <div style={{ display: \"flex\", paddingTop: \"5px\" }}>\r\n                                    <div style={{ paddingLeft: \"10px\", paddingRight: \"22.4em\" }}>File names</div>\r\n                                    <input type='file'></input>\r\n                                </div>\r\n                            </div>\r\n                        </Accordion.Body>\r\n                    </Accordion.Item>\r\n                </Accordion>\r\n\r\n                <div style={{ display: \"flex\", paddingBottom: \"10px\", paddingTop: \"10px\" }}>\r\n                    <button onClick={() => navigate('/threeteenthpage')} style={{ marginLeft:\"10px\"}}>Previous</button>\r\n                    <button onClick={() => navigate('/submitpage')} style={{ marginLeft: \"60em\" }}>Next</button></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FourteenPage","D:\\Clone Web\\Frontend-IMMI-462-master\\Fontend-IMMI-462_Remake\\src\\component\\SubmitPage.js",[],[],{"ruleId":"503","severity":1,"message":"504","line":13,"column":8,"nodeType":"505","messageId":"506","endLine":13,"endColumn":12},{"ruleId":"503","severity":1,"message":"507","line":4,"column":11,"nodeType":"505","messageId":"506","endLine":4,"endColumn":15},{"ruleId":"503","severity":1,"message":"507","line":5,"column":10,"nodeType":"505","messageId":"506","endLine":5,"endColumn":14},{"ruleId":"503","severity":1,"message":"508","line":9,"column":10,"nodeType":"505","messageId":"506","endLine":9,"endColumn":17},{"ruleId":"503","severity":1,"message":"509","line":4,"column":26,"nodeType":"505","messageId":"506","endLine":4,"endColumn":31},{"ruleId":"503","severity":1,"message":"510","line":16,"column":9,"nodeType":"505","messageId":"506","endLine":16,"endColumn":20},{"ruleId":"511","severity":1,"message":"512","line":13,"column":27,"nodeType":"513","messageId":"514","endLine":13,"endColumn":29},{"ruleId":"503","severity":1,"message":"515","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":15},{"ruleId":"503","severity":1,"message":"516","line":19,"column":11,"nodeType":"505","messageId":"506","endLine":19,"endColumn":21},{"ruleId":"517","severity":1,"message":"518","line":109,"column":43,"nodeType":"519","endLine":109,"endColumn":68},{"ruleId":"503","severity":1,"message":"520","line":4,"column":8,"nodeType":"505","messageId":"506","endLine":4,"endColumn":17},{"ruleId":"503","severity":1,"message":"521","line":1,"column":10,"nodeType":"505","messageId":"506","endLine":1,"endColumn":14},{"ruleId":"503","severity":1,"message":"515","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":15},{"ruleId":"522","severity":1,"message":"523","line":32,"column":8,"nodeType":"524","endLine":32,"endColumn":26,"suggestions":"525"},{"ruleId":"517","severity":1,"message":"518","line":103,"column":43,"nodeType":"519","endLine":103,"endColumn":67},{"ruleId":"503","severity":1,"message":"526","line":7,"column":38,"nodeType":"505","messageId":"506","endLine":7,"endColumn":47},{"ruleId":"503","severity":1,"message":"527","line":11,"column":12,"nodeType":"505","messageId":"506","endLine":11,"endColumn":17},{"ruleId":"522","severity":1,"message":"528","line":29,"column":8,"nodeType":"524","endLine":29,"endColumn":24,"suggestions":"529"},{"ruleId":"517","severity":1,"message":"518","line":68,"column":43,"nodeType":"519","endLine":68,"endColumn":67},{"ruleId":"503","severity":1,"message":"530","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":25},{"ruleId":"503","severity":1,"message":"515","line":6,"column":10,"nodeType":"505","messageId":"506","endLine":6,"endColumn":15},{"ruleId":"503","severity":1,"message":"531","line":2,"column":17,"nodeType":"505","messageId":"506","endLine":2,"endColumn":26},{"ruleId":"503","severity":1,"message":"530","line":2,"column":28,"nodeType":"505","messageId":"506","endLine":2,"endColumn":36},{"ruleId":"503","severity":1,"message":"532","line":8,"column":8,"nodeType":"505","messageId":"506","endLine":8,"endColumn":12},{"ruleId":"503","severity":1,"message":"533","line":4,"column":13,"nodeType":"505","messageId":"506","endLine":4,"endColumn":22},{"ruleId":"522","severity":1,"message":"534","line":110,"column":7,"nodeType":"524","endLine":110,"endColumn":15,"suggestions":"535"},{"ruleId":"517","severity":1,"message":"518","line":119,"column":21,"nodeType":"519","endLine":119,"endColumn":28},{"ruleId":"517","severity":1,"message":"518","line":19,"column":17,"nodeType":"519","endLine":19,"endColumn":137},{"ruleId":"503","severity":1,"message":"530","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":25},{"ruleId":"503","severity":1,"message":"531","line":1,"column":20,"nodeType":"505","messageId":"506","endLine":1,"endColumn":29},{"ruleId":"503","severity":1,"message":"536","line":4,"column":8,"nodeType":"505","messageId":"506","endLine":4,"endColumn":14},{"ruleId":"503","severity":1,"message":"537","line":15,"column":12,"nodeType":"505","messageId":"506","endLine":15,"endColumn":21},{"ruleId":"522","severity":1,"message":"538","line":42,"column":8,"nodeType":"524","endLine":42,"endColumn":24,"suggestions":"539"},{"ruleId":"517","severity":1,"message":"518","line":83,"column":43,"nodeType":"519","endLine":83,"endColumn":67},{"ruleId":"503","severity":1,"message":"530","line":1,"column":17,"nodeType":"505","messageId":"506","endLine":1,"endColumn":25},{"ruleId":"503","severity":1,"message":"540","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":21},{"ruleId":"503","severity":1,"message":"541","line":9,"column":24,"nodeType":"505","messageId":"506","endLine":9,"endColumn":32},{"ruleId":"503","severity":1,"message":"542","line":9,"column":27,"nodeType":"505","messageId":"506","endLine":9,"endColumn":49},{"ruleId":"503","severity":1,"message":"543","line":9,"column":51,"nodeType":"505","messageId":"506","endLine":9,"endColumn":72},{"ruleId":"544","severity":1,"message":"545","line":97,"column":43,"nodeType":"505","messageId":"546","endLine":97,"endColumn":51},{"ruleId":"522","severity":1,"message":"547","line":257,"column":8,"nodeType":"524","endLine":257,"endColumn":22,"suggestions":"548"},{"ruleId":"522","severity":1,"message":"549","line":28,"column":7,"nodeType":"524","endLine":28,"endColumn":17,"suggestions":"550"},{"ruleId":"503","severity":1,"message":"551","line":5,"column":11,"nodeType":"505","messageId":"506","endLine":5,"endColumn":19},{"ruleId":"503","severity":1,"message":"509","line":2,"column":26,"nodeType":"505","messageId":"506","endLine":2,"endColumn":31},{"ruleId":"503","severity":1,"message":"552","line":5,"column":13,"nodeType":"505","messageId":"506","endLine":5,"endColumn":14},{"ruleId":"503","severity":1,"message":"553","line":18,"column":8,"nodeType":"505","messageId":"506","endLine":18,"endColumn":14},{"ruleId":"503","severity":1,"message":"554","line":22,"column":8,"nodeType":"505","messageId":"506","endLine":22,"endColumn":9},{"ruleId":"503","severity":1,"message":"533","line":22,"column":13,"nodeType":"505","messageId":"506","endLine":22,"endColumn":22},{"ruleId":"503","severity":1,"message":"555","line":23,"column":7,"nodeType":"505","messageId":"506","endLine":23,"endColumn":15},{"ruleId":"556","severity":1,"message":"557","line":41,"column":47,"nodeType":"519","messageId":"558","endLine":41,"endColumn":64},{"ruleId":"503","severity":1,"message":"559","line":4,"column":8,"nodeType":"505","messageId":"506","endLine":4,"endColumn":17},{"ruleId":"503","severity":1,"message":"551","line":7,"column":11,"nodeType":"505","messageId":"506","endLine":7,"endColumn":19},{"ruleId":"517","severity":1,"message":"518","line":12,"column":21,"nodeType":"519","endLine":12,"endColumn":55},{"ruleId":"503","severity":1,"message":"521","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":14},{"ruleId":"503","severity":1,"message":"533","line":10,"column":13,"nodeType":"505","messageId":"506","endLine":10,"endColumn":22},{"ruleId":"503","severity":1,"message":"560","line":23,"column":23,"nodeType":"505","messageId":"506","endLine":23,"endColumn":35},{"ruleId":"503","severity":1,"message":"533","line":11,"column":13,"nodeType":"505","messageId":"506","endLine":11,"endColumn":22},{"ruleId":"503","severity":1,"message":"561","line":14,"column":11,"nodeType":"505","messageId":"506","endLine":14,"endColumn":19},{"ruleId":"503","severity":1,"message":"560","line":15,"column":23,"nodeType":"505","messageId":"506","endLine":15,"endColumn":35},{"ruleId":"503","severity":1,"message":"562","line":30,"column":11,"nodeType":"505","messageId":"506","endLine":30,"endColumn":18},{"ruleId":"503","severity":1,"message":"563","line":31,"column":11,"nodeType":"505","messageId":"506","endLine":31,"endColumn":21},{"ruleId":"503","severity":1,"message":"533","line":7,"column":13,"nodeType":"505","messageId":"506","endLine":7,"endColumn":22},{"ruleId":"503","severity":1,"message":"561","line":10,"column":11,"nodeType":"505","messageId":"506","endLine":10,"endColumn":19},{"ruleId":"503","severity":1,"message":"564","line":12,"column":12,"nodeType":"505","messageId":"506","endLine":12,"endColumn":22},{"ruleId":"503","severity":1,"message":"565","line":12,"column":23,"nodeType":"505","messageId":"506","endLine":12,"endColumn":36},{"ruleId":"503","severity":1,"message":"566","line":13,"column":12,"nodeType":"505","messageId":"506","endLine":13,"endColumn":21},{"ruleId":"503","severity":1,"message":"567","line":13,"column":22,"nodeType":"505","messageId":"506","endLine":13,"endColumn":34},{"ruleId":"503","severity":1,"message":"568","line":14,"column":12,"nodeType":"505","messageId":"506","endLine":14,"endColumn":26},{"ruleId":"503","severity":1,"message":"569","line":14,"column":28,"nodeType":"505","messageId":"506","endLine":14,"endColumn":43},{"ruleId":"503","severity":1,"message":"570","line":15,"column":12,"nodeType":"505","messageId":"506","endLine":15,"endColumn":24},{"ruleId":"503","severity":1,"message":"571","line":15,"column":26,"nodeType":"505","messageId":"506","endLine":15,"endColumn":40},{"ruleId":"503","severity":1,"message":"572","line":16,"column":12,"nodeType":"505","messageId":"506","endLine":16,"endColumn":21},{"ruleId":"503","severity":1,"message":"560","line":16,"column":23,"nodeType":"505","messageId":"506","endLine":16,"endColumn":35},{"ruleId":"503","severity":1,"message":"533","line":7,"column":13,"nodeType":"505","messageId":"506","endLine":7,"endColumn":22},{"ruleId":"503","severity":1,"message":"562","line":10,"column":11,"nodeType":"505","messageId":"506","endLine":10,"endColumn":18},{"ruleId":"503","severity":1,"message":"563","line":12,"column":11,"nodeType":"505","messageId":"506","endLine":12,"endColumn":21},{"ruleId":"503","severity":1,"message":"533","line":7,"column":13,"nodeType":"505","messageId":"506","endLine":7,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":8,"column":13,"nodeType":"505","messageId":"506","endLine":8,"endColumn":22},{"ruleId":"503","severity":1,"message":"573","line":56,"column":11,"nodeType":"505","messageId":"506","endLine":56,"endColumn":29},{"ruleId":"503","severity":1,"message":"533","line":6,"column":13,"nodeType":"505","messageId":"506","endLine":6,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":6,"column":13,"nodeType":"505","messageId":"506","endLine":6,"endColumn":22},{"ruleId":"503","severity":1,"message":"574","line":1,"column":10,"nodeType":"505","messageId":"506","endLine":1,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":6,"column":13,"nodeType":"505","messageId":"506","endLine":6,"endColumn":22},{"ruleId":"503","severity":1,"message":"521","line":4,"column":10,"nodeType":"505","messageId":"506","endLine":4,"endColumn":14},{"ruleId":"503","severity":1,"message":"533","line":11,"column":13,"nodeType":"505","messageId":"506","endLine":11,"endColumn":22},{"ruleId":"503","severity":1,"message":"572","line":16,"column":12,"nodeType":"505","messageId":"506","endLine":16,"endColumn":21},{"ruleId":"503","severity":1,"message":"560","line":16,"column":23,"nodeType":"505","messageId":"506","endLine":16,"endColumn":35},{"ruleId":"503","severity":1,"message":"575","line":2,"column":10,"nodeType":"505","messageId":"506","endLine":2,"endColumn":17},{"ruleId":"503","severity":1,"message":"533","line":4,"column":13,"nodeType":"505","messageId":"506","endLine":4,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":5,"column":13,"nodeType":"505","messageId":"506","endLine":5,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":5,"column":13,"nodeType":"505","messageId":"506","endLine":5,"endColumn":22},{"ruleId":"503","severity":1,"message":"533","line":5,"column":13,"nodeType":"505","messageId":"506","endLine":5,"endColumn":22},{"ruleId":"503","severity":1,"message":"576","line":6,"column":11,"nodeType":"505","messageId":"506","endLine":6,"endColumn":18},"no-unused-vars","'i18n' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'doLogin' is defined but never used.","'Trans' is defined but never used.","'MdDashboard' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Toast' is defined but never used.","'handleShow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TableUser' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataUpdate'. Either include it or remove the dependency array.","ArrayExpression",["577"],"'resetData' is assigned a value but never used.","'image' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataView'. Either include it or remove the dependency array.",["578"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'User' is defined but never used.","'cloneDeep' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchQuestion'. Either include it or remove the dependency array.",["579"],"'Select' is defined but never used.","'quizImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dataEdit'. Either include it or remove the dependency array.",["580"],"'TbHeartPlus' is defined but never used.","'validate' is defined but never used.","'postNewQuestionForQuiz' is defined but never used.","'postAnswerForQuestion' is defined but never used.","no-use-before-define","'toBase64' was used before it was defined.","usedBeforeDefined","React Hook useEffect has a missing dependency: 'fetchQuizWithQA'. Either include it or remove the dependency array.",["581"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["582"],"'navigate' is assigned a value but never used.","'t' is assigned a value but never used.","'Header' is defined but never used.","'_' is defined but never used.","'Notfound' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component EightPage_New must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'FirstPage' is defined but never used.","'setStartDate' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'account' is assigned a value but never used.","'FormatDate' is assigned a value but never used.","'familyName' is assigned a value but never used.","'setFamilyName' is assigned a value but never used.","'givenName' is assigned a value but never used.","'setGivenname' is assigned a value but never used.","'Identification' is assigned a value but never used.","'setIdenfication' is assigned a value but never used.","'countryIssue' is assigned a value but never used.","'setContryIssue' is assigned a value but never used.","'startDate' is assigned a value but never used.","'handleSetStartDate' is assigned a value but never used.","'defaultsDeep' is defined but never used.","'useMemo' is defined but never used.","'options' is assigned a value but never used.",{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},"Update the dependencies array to be: [dataUpdate, props.dataUpdate]",{"range":"595","text":"596"},"Update the dependencies array to be: [dataView, props.dataView]",{"range":"597","text":"598"},"Update the dependencies array to be: [fetchQuestion, quizId]",{"range":"599","text":"600"},"Update the dependencies array to be: [dataEdit, props.dataEdit]",{"range":"601","text":"602"},"Update the dependencies array to be: [fetchQuizWithQA, selectedQuiz]",{"range":"603","text":"604"},"Update the dependencies array to be: [duration, props]",{"range":"605","text":"606"},[1226,1244],"[dataUpdate, props.dataUpdate]",[1135,1151],"[dataView, props.dataView]",[4069,4077],"[fetchQuestion, quizId]",[1612,1628],"[dataEdit, props.dataEdit]",[9427,9441],"[fetchQuizWithQA, selectedQuiz]",[825,835],"[duration, props]"]